{{!

  Copyright (c) Facebook, Inc. and its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}
{{> AutoGenerated}}

package {{service:javaPackage}};

import java.util.*;

public class {{service:javaCapitalName}}AsyncReactiveWrapper {{#service:extends}} extends {{service:javaPackage}}.{{service:javaCapitalName}}AsyncReactiveWrapper{{/service:extends}}
    implements {{service:javaCapitalName}}.Reactive {
    private final {{service:javaCapitalName}}.Async _delegate;

    public {{service:javaCapitalName}}AsyncReactiveWrapper({{service:javaCapitalName}}.Async _delegate) {
        {{#service:extends}}super(_delegate);{{/service:extends}}
        this._delegate = _delegate;
    }

    @java.lang.Override
    public void dispose() {
        _delegate.close();
    }

    {{#service:supportedFunctions}}
    @java.lang.Override
    public reactor.core.publisher.Mono<{{#function:return_type}}{{> BoxedType}}{{/function:return_type}}> {{function:javaName}}({{#function:args}}final {{#field:type}}{{> Type}}{{/field:type}} {{field:javaName}}{{^last?}}, {{/last?}}{{/function:args}}) {
        return com.facebook.swift.transport.util.FutureUtil.toMono(_delegate.{{function:javaName}}({{#function:args}}{{field:javaName}}{{^last?}}, {{/last?}}{{/function:args}}));
    }

    {{/service:supportedFunctions}}
    {{#service:streamingFunctions}}
    @java.lang.Override
    public reactor.core.publisher.Flux<{{#function:return_type}}{{> StreamReturnType}}{{/function:return_type}}> {{function:javaName}}({{#function:args}}final {{#field:type}}{{> Type}}{{/field:type}} {{field:javaName}}{{^last?}}, {{/last?}}{{/function:args}}) {
        throw new UnsupportedOperationException();
    }

    {{/service:streamingFunctions}}
    {{#service:sinkFunctions}}
    @java.lang.Override
    public {{#function:return_type}}{{> SinkReturnType}}{{/function:return_type}} {{function:javaName}}({{#function:args}}final {{#field:type}}{{> Type}}{{/field:type}} {{field:javaName}}, {{/function:args}} org.reactivestreams.Publisher<{{#function:return_type}}{{#type:sink_elem_type}}{{ >BoxedType}}{{/type:sink_elem_type}}{{/function:return_type}}> payloads) {
        throw new UnsupportedOperationException();
    }

    {{/service:sinkFunctions}}
}
