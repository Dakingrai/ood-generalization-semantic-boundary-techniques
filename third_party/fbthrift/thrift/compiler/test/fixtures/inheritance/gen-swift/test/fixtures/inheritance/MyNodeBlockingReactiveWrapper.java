/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.inheritance;

import java.util.*;

public class MyNodeBlockingReactiveWrapper  extends test.fixtures.inheritance.MyRootBlockingReactiveWrapper
    implements MyNode.Reactive {
    private final MyNode _delegate;
    private final reactor.core.scheduler.Scheduler _scheduler;

    public MyNodeBlockingReactiveWrapper(MyNode _delegate, reactor.core.scheduler.Scheduler _scheduler) {
        super(_delegate, _scheduler);
        this._delegate = _delegate;
        this._scheduler = _scheduler;
    }

    @java.lang.Override
    public void dispose() {
        _delegate.close();
    }

    @java.lang.Override
    public reactor.core.publisher.Mono<Void> doMid() {
        return reactor.core.publisher.Mono.<Void>fromRunnable(() -> {
                try {
                    _delegate.doMid();
                } catch (Throwable _e) {
                    throw reactor.core.Exceptions.propagate(_e);
                }
            }).subscribeOn(_scheduler);
    }

}
