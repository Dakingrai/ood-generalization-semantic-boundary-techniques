[{"NatSQL": "select count ( singer.* )", "sql": "select count ( singer.* )  from singer "}, {"NatSQL": "select count ( singer.* )", "sql": "select count ( singer.* )  from singer "}, {"NatSQL": "select singer.Name , singer.Country , singer.Age order by singer.Age desc", "sql": "select singer.Name , singer.Country , singer.Age from singer  order by singer.Age desc"}, {"NatSQL": "select singer.Name , singer.Country , singer.Age order by singer.Age desc", "sql": "select singer.Name , singer.Country , singer.Age from singer  order by singer.Age desc"}, {"NatSQL": "select avg ( singer.Age ) , min ( singer.Age ) , max ( singer.Age ) where singer.Country = \"France\"", "sql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from singer  where  singer.Country = \"France\" "}, {"NatSQL": "select avg ( singer.Age ) , min ( singer.Age ) , max ( singer.Age ) where singer.Country = \"France\"", "sql": "select avg ( singer.Age )  , min ( singer.Age )  , max ( singer.Age )  from singer  where  singer.Country = \"France\" "}, {"NatSQL": "select singer.Song_Name , singer.Song_release_year order by singer.Age asc limit 1", "sql": "select singer.Song_Name , singer.Song_release_year from singer  order by singer.Age asc limit 1"}, {"NatSQL": "select singer.Song_Name , singer.Song_release_year order by singer.Age asc limit 1", "sql": "select singer.Song_Name , singer.Song_release_year from singer  order by singer.Age asc limit 1"}, {"NatSQL": "select distinct singer.Country where singer.Age > 20", "sql": "select  distinct singer.Country from singer  where  singer.Age > 20 "}, {"NatSQL": "select distinct singer.Country where singer.Age > 20", "sql": "select  distinct singer.Country from singer  where  singer.Age > 20 "}, {"NatSQL": "select singer.Country , count ( singer.* ) group by singer.Country", "sql": "select singer.Country , count ( singer.* )  from singer  group by singer.Country "}, {"NatSQL": "select singer.Country , count ( singer.* ) group by singer.Country", "sql": "select singer.Country , count ( singer.* )  from singer  group by singer.Country "}, {"NatSQL": "select singer.Song_Name where @.@ > avg ( singer.Age )", "sql": "select singer.Song_Name from singer  where  @.@ > avg ( singer.Age )  "}, {"NatSQL": "select singer.Song_Name where @.@ > avg ( singer.Age )", "sql": "select singer.Song_Name from singer  where  @.@ > avg ( singer.Age )  "}, {"NatSQL": "select stadium.Location , stadium.Name where stadium.Capacity between 5000 and 10000", "sql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000 "}, {"NatSQL": "select stadium.Location , stadium.Name where stadium.Capacity between 5000 and 10000", "sql": "select stadium.Location , stadium.Name from stadium  where  stadium.Capacity between 5000 and 10000 "}, {"NatSQL": "select max ( stadium.Capacity ) , stadium.average", "sql": "select max ( stadium.Capacity )  ,  stadium.average  from stadium "}, {"NatSQL": "select avg ( stadium.Capacity ) , max ( stadium.Capacity )", "sql": "select avg ( stadium.Capacity )  , max ( stadium.Capacity )  from stadium "}, {"NatSQL": "select stadium.Name , stadium.Capacity order by stadium.Average desc limit 1", "sql": "select stadium.Name , stadium.Capacity from stadium  order by stadium.Average desc limit 1"}, {"NatSQL": "select stadium.Name , stadium.Capacity order by stadium.Average desc limit 1", "sql": "select stadium.Name , stadium.Capacity from stadium  order by stadium.Average desc limit 1"}, {"NatSQL": "select count ( concert.* ) where concert.Year = 2014 or concert.Year = 2015", "sql": "select count ( concert.* )  from concert  where  concert.Year = 2014  or  concert.Year = 2015 "}, {"NatSQL": "select count ( concert.* ) where concert.Year = 2014 or concert.Year = 2015", "sql": "select count ( concert.* )  from concert  where  concert.Year = 2014  or  concert.Year = 2015 "}, {"NatSQL": "select stadium.Name , count ( concert.* ) group by concert.Stadium_ID", "sql": "select stadium.Name , count ( concert.* )  from concert  group by concert.Stadium_ID "}, {"NatSQL": "select stadium.Name , count ( concert.* ) group by concert.Stadium_ID", "sql": "select stadium.Name , count ( concert.* )  from concert  group by concert.Stadium_ID "}, {"NatSQL": "select stadium.Name , stadium.Capacity where concert.Year >= 2014 group by stadium.Stadium_ID order by count ( concert.* ) desc limit 1", "sql": "select stadium.Name , stadium.Capacity from concert  where  concert.Year >= 2014  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"}, {"NatSQL": "select stadium.Name , stadium.Capacity where concert.Year > 2013 group by stadium.Stadium_ID order by count ( concert.* ) desc limit 1", "sql": "select stadium.Name , stadium.Capacity from concert  where  concert.Year > 2013  group by stadium.Stadium_ID  order by count ( concert.* )  desc limit 1"}, {"NatSQL": "select concert.Year group by concert.Year order by count ( concert.* ) desc limit 1", "sql": "select concert.Year from concert  group by concert.Year  order by count ( concert.* )  desc limit 1"}, {"NatSQL": "select concert.Year group by concert.Year order by count ( concert.* ) desc limit 1", "sql": "select concert.Year from concert  group by concert.Year  order by count ( concert.* )  desc limit 1"}, {"NatSQL": "select stadium.Name where @.@ not in concert.*", "sql": "select stadium.Name from stadium  where  @.@ not in concert.* "}, {"NatSQL": "select stadium.Name where @.@ not in concert.*", "sql": "select stadium.Name from stadium  where  @.@ not in concert.* "}, {"NatSQL": "select singer.Country where singer.Age > 40 and singer.Age < 30", "sql": "select singer.Country from singer  where  singer.Age > 40  and  singer.Age < 30 "}, {"NatSQL": "select stadium.Name where except_ @.@ is stadium.* and concert.Year = 2014", "sql": "select stadium.Name from stadium  where  except_  @.@ is stadium.*  and  concert.Year = 2014 "}, {"NatSQL": "select stadium.Name where except_ @.@ is stadium.* and concert.Year = 2014", "sql": "select stadium.Name from stadium  where  except_  @.@ is stadium.*  and  concert.Year = 2014 "}, {"NatSQL": "select concert.concert_Name , concert.Theme , count ( singer_in_concert.* ) group by concert.concert_ID", "sql": "select concert.concert_Name , concert.Theme , count ( singer_in_concert.* )  from singer_in_concert  group by concert.concert_ID "}, {"NatSQL": "select concert.concert_Name , concert.Theme , count ( singer_in_concert.* ) group by concert.concert_ID", "sql": "select concert.concert_Name , concert.Theme , count ( singer_in_concert.* )  from singer_in_concert  group by concert.concert_ID "}, {"NatSQL": "select singer.Name , count ( singer_in_concert.* ) group by singer.Singer_ID", "sql": "select singer.Name , count ( singer_in_concert.* )  from singer_in_concert  group by singer.Singer_ID "}, {"NatSQL": "select singer.Name , count ( singer_in_concert.* ) group by singer.Singer_ID", "sql": "select singer.Name , count ( singer_in_concert.* )  from singer_in_concert  group by singer.Singer_ID "}, {"NatSQL": "select singer.Name where concert.Year = 2014", "sql": "select singer.Name from singer  where  concert.Year = 2014 "}, {"NatSQL": "select singer.Name where concert.Year = 2014", "sql": "select singer.Name from singer  where  concert.Year = 2014 "}, {"NatSQL": "select singer.Name , singer.Country where singer.Song_Name like \"%Hey%\"", "sql": "select singer.Name , singer.Country from singer  where  singer.Song_Name like \"%Hey%\" "}, {"NatSQL": "select singer.Name , singer.Country where singer.Song_Name like \"%Hey%\"", "sql": "select singer.Name , singer.Country from singer  where  singer.Song_Name like \"%Hey%\" "}, {"NatSQL": "select stadium.Name , stadium.Location where concert.Year = 2014 and concert.Year = 2015", "sql": "select stadium.Name , stadium.Location from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "}, {"NatSQL": "select stadium.Name , stadium.Location where concert.Year = 2014 and concert.Year = 2015", "sql": "select stadium.Name , stadium.Location from stadium  where  concert.Year = 2014  and  concert.Year = 2015 "}, {"NatSQL": "select count ( concert.* ) order by stadium.Capacity desc limit 1", "sql": "select count ( concert.* )  from concert  order by stadium.Capacity desc limit 1"}, {"NatSQL": "select count ( concert.* ) order by stadium.Capacity desc limit 1", "sql": "select count ( concert.* )  from concert  order by stadium.Capacity desc limit 1"}, {"NatSQL": "select count ( pets.* ) where pets.weight > 10", "sql": "select count ( pets.* )  from pets  where  pets.weight > 10 "}, {"NatSQL": "select count ( pets.* ) where pets.weight > 10", "sql": "select count ( pets.* )  from pets  where  pets.weight > 10 "}, {"NatSQL": "select pets.weight order by pets.pet_age asc limit 1", "sql": "select pets.weight from pets  order by pets.pet_age asc limit 1"}, {"NatSQL": "select pets.weight order by pets.pet_age asc limit 1", "sql": "select pets.weight from pets  order by pets.pet_age asc limit 1"}, {"NatSQL": "select max ( pets.weight ) , pets.PetType group by pets.PetType", "sql": "select max ( pets.weight )  , pets.PetType from pets  group by pets.PetType "}, {"NatSQL": "select max ( pets.weight ) , pets.PetType group by pets.PetType", "sql": "select max ( pets.weight )  , pets.PetType from pets  group by pets.PetType "}, {"NatSQL": "select count ( has_pet.* ) where student.Age > 20", "sql": "select count ( has_pet.* )  from has_pet  where  student.Age > 20 "}, {"NatSQL": "select count ( has_pet.* ) where student.Age > 20", "sql": "select count ( has_pet.* )  from has_pet  where  student.Age > 20 "}, {"NatSQL": "select count ( pets.* ) where student.Sex = \"F\" and pets.PetType = \"dog\"", "sql": "select count ( pets.* )  from pets  where  student.Sex = \"F\"  and  pets.PetType = \"dog\" "}, {"NatSQL": "select count ( pets.* ) where student.Sex = \"F\" and pets.PetType = \"dog\"", "sql": "select count ( pets.* )  from pets  where  student.Sex = \"F\"  and  pets.PetType = \"dog\" "}, {"NatSQL": "select count ( distinct pets.PetType )", "sql": "select count (  distinct pets.PetType )  from pets "}, {"NatSQL": "select count ( distinct pets.PetType )", "sql": "select count (  distinct pets.PetType )  from pets "}, {"NatSQL": "select distinct student.Fname where pets.PetType = \"cat\" or pets.PetType = \"dog\"", "sql": "select  distinct student.Fname from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "}, {"NatSQL": "select distinct student.Fname where pets.PetType = \"cat\" or pets.PetType = \"dog\"", "sql": "select  distinct student.Fname from student  where  pets.PetType = \"cat\"  or  pets.PetType = \"dog\" "}, {"NatSQL": "select student.Fname where pets.PetType = \"cat\" and pets.PetType = \"dog\"", "sql": "select student.Fname from student  where  pets.PetType = \"cat\"  and  pets.PetType = \"dog\" "}, {"NatSQL": "select student.Fname where pets.PetType = \"cat\" and pets.PetType = \"dog\"", "sql": "select student.Fname from student  where  pets.PetType = \"cat\"  and  pets.PetType = \"dog\" "}, {"NatSQL": "select student.Major , student.Age where @.@ not in student.* and pets.PetType = \"cat\"", "sql": "select student.Major , student.Age from student  where  @.@ not in student.*  and  pets.PetType = \"cat\" "}, {"NatSQL": "select student.Major , student.Age where @.@ not in student.* and pets.PetType = \"cat\"", "sql": "select student.Major , student.Age from student  where  @.@ not in student.*  and  pets.PetType = \"cat\" "}, {"NatSQL": "select student.StuID where except_ @.@ is pets.* and pets.PetType = \"cat\"", "sql": "select student.StuID from student  where  except_  @.@ is pets.*  and  pets.PetType = \"cat\" "}, {"NatSQL": "select student.StuID where except_ @.@ is pets.* and pets.PetType = \"cat\"", "sql": "select student.StuID from student  where  except_  @.@ is pets.*  and  pets.PetType = \"cat\" "}, {"NatSQL": "select student.Fname , student.Age where pets.PetType = \"dog\" and @.@ not in student.* and pets.PetType = \"cat\"", "sql": "select student.Fname , student.Age from student  where  pets.PetType = \"dog\"  and  @.@ not in student.*  and  pets.PetType = \"cat\" "}, {"NatSQL": "select student.Fname , student.Age where pets.PetType = \"dog\" and @.@ not in student.* and pets.PetType = \"cat\"", "sql": "select student.Fname , student.Age from student  where  pets.PetType = \"dog\"  and  @.@ not in student.*  and  pets.PetType = \"cat\" "}, {"NatSQL": "select pets.PetType , pets.weight order by pets.pet_age asc limit 1", "sql": "select pets.PetType , pets.weight from pets  order by pets.pet_age asc limit 1"}, {"NatSQL": "select pets.PetType , pets.weight order by pets.pet_age asc limit 1", "sql": "select pets.PetType , pets.weight from pets  order by pets.pet_age asc limit 1"}, {"NatSQL": "select pets.PetID , pets.weight where pets.pet_age > 1", "sql": "select pets.PetID , pets.weight from pets  where  pets.pet_age > 1 "}, {"NatSQL": "select pets.PetID , pets.weight where pets.pet_age > 1", "sql": "select pets.PetID , pets.weight from pets  where  pets.pet_age > 1 "}, {"NatSQL": "select avg ( pets.pet_age ) , max ( pets.pet_age ) , pets.PetType group by pets.PetType", "sql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from pets  group by pets.PetType "}, {"NatSQL": "select avg ( pets.pet_age ) , max ( pets.pet_age ) , pets.PetType group by pets.PetType", "sql": "select avg ( pets.pet_age )  , max ( pets.pet_age )  , pets.PetType from pets  group by pets.PetType "}, {"NatSQL": "select avg ( pets.weight ) , pets.PetType group by pets.PetType", "sql": "select avg ( pets.weight )  , pets.PetType from pets  group by pets.PetType "}, {"NatSQL": "select avg ( pets.weight ) , pets.PetType group by pets.PetType", "sql": "select avg ( pets.weight )  , pets.PetType from pets  group by pets.PetType "}, {"NatSQL": "select distinct student.Fname , student.Age where @.@ join has_pet.*", "sql": "select  distinct student.Fname , student.Age from student  where  @.@ join has_pet.* "}, {"NatSQL": "select distinct student.Fname , student.Age where @.@ join has_pet.*", "sql": "select  distinct student.Fname , student.Age from student  where  @.@ join has_pet.* "}, {"NatSQL": "select has_pet.PetID where student.LName = \"Smith\"", "sql": "select has_pet.PetID from has_pet  where  student.LName = \"Smith\" "}, {"NatSQL": "select has_pet.PetID where student.LName = \"Smith\"", "sql": "select has_pet.PetID from has_pet  where  student.LName = \"Smith\" "}, {"NatSQL": "select count ( has_pet.* ) , student.StuID group by student.StuID", "sql": "select count ( has_pet.* )  , student.StuID from student  group by student.StuID "}, {"NatSQL": "select count ( has_pet.* ) , student.StuID group by student.StuID", "sql": "select count ( has_pet.* )  , student.StuID from student  group by student.StuID "}, {"NatSQL": "select student.Fname , student.Sex where count ( has_pet.* ) > 1 group by student.StuID", "sql": "select student.Fname , student.Sex from student  where  count ( has_pet.* )  > 1  group by student.StuID "}, {"NatSQL": "select student.Fname , student.Sex where count ( has_pet.* ) > 1 group by student.StuID", "sql": "select student.Fname , student.Sex from has_pet  where  count ( has_pet.* )  > 1  group by student.StuID "}, {"NatSQL": "select student.LName where pets.pet_age = 3 and pets.PetType = \"cat\"", "sql": "select student.LName from student  where  pets.pet_age = 3  and  pets.PetType = \"cat\" "}, {"NatSQL": "select student.LName where pets.pet_age = 3 and pets.PetType = \"cat\"", "sql": "select student.LName from student  where  pets.pet_age = 3  and  pets.PetType = \"cat\" "}, {"NatSQL": "select avg ( student.Age ) where @.@ not in has_pet.*", "sql": "select avg ( student.Age )  from student  where  @.@ not in has_pet.* "}, {"NatSQL": "select avg ( student.Age ) where @.@ not in has_pet.*", "sql": "select avg ( student.Age )  from student  where  @.@ not in has_pet.* "}, {"NatSQL": "select count ( continents.* )", "sql": "select count ( continents.* )  from continents "}, {"NatSQL": "select count ( continents.* )", "sql": "select count ( continents.* )  from continents "}, {"NatSQL": "select continents.ContId , continents.Continent , count ( countries.* ) group by continents.ContId", "sql": "select continents.ContId , continents.Continent , count ( countries.* )  from countries  group by continents.ContId "}, {"NatSQL": "select continents.ContId , continents.Continent , count ( countries.* ) group by continents.ContId", "sql": "select continents.ContId , continents.Continent , count ( countries.* )  from countries  group by continents.ContId "}, {"NatSQL": "select count ( countries.* )", "sql": "select count ( countries.* )  from countries "}, {"NatSQL": "select count ( countries.* )", "sql": "select count ( countries.* )  from countries "}, {"NatSQL": "select car_makers.FullName , car_makers.Id , count ( model_list.* ) group by car_makers.Id", "sql": "select car_makers.FullName , car_makers.Id , count ( model_list.* )  from car_makers  group by car_makers.Id "}, {"NatSQL": "select car_makers.FullName , car_makers.Id , count ( model_list.* ) group by car_makers.Id", "sql": "select car_makers.FullName , car_makers.Id , count ( model_list.* )  from car_makers  group by car_makers.Id "}, {"NatSQL": "select car_names.Model order by cars_data.Horsepower asc limit 1", "sql": "select car_names.Model from car_names  order by cars_data.Horsepower asc limit 1"}, {"NatSQL": "select car_names.Model order by cars_data.Horsepower asc limit 1", "sql": "select car_names.Model from car_names  order by cars_data.Horsepower asc limit 1"}, {"NatSQL": "select car_names.Model where @.@ < avg ( cars_data.Weight )", "sql": "select car_names.Model from car_names  where  @.@ < avg ( cars_data.Weight )  "}, {"NatSQL": "select car_names.Model where @.@ < avg ( cars_data.Weight )", "sql": "select car_names.Model from car_names  where  @.@ < avg ( cars_data.Weight )  "}, {"NatSQL": "select distinct car_makers.Maker where cars_data.Year = \"1970\"", "sql": "select  distinct car_makers.Maker from car_makers  where  cars_data.Year = \"1970\" "}, {"NatSQL": "select distinct car_makers.Maker where cars_data.Year = \"1970\"", "sql": "select  distinct car_makers.Maker from car_makers  where  cars_data.Year = \"1970\" "}, {"NatSQL": "select car_names.Make , cars_data.Year where @.@ = min ( cars_data.Year )", "sql": "select car_names.Make , cars_data.Year from cars_data  where  @.@ = min ( cars_data.Year )  "}, {"NatSQL": "select car_names.Make , cars_data.Year where @.@ = min ( cars_data.Year )", "sql": "select car_names.Make , cars_data.Year from cars_data  where  @.@ = min ( cars_data.Year )  "}, {"NatSQL": "select distinct model_list.Model where cars_data.Year > 1980", "sql": "select  distinct model_list.Model from model_list  where  cars_data.Year > 1980 "}, {"NatSQL": "select distinct model_list.Model where cars_data.Year > 1980", "sql": "select  distinct model_list.Model from model_list  where  cars_data.Year > 1980 "}, {"NatSQL": "select continents.Continent , count ( car_makers.* ) group by continents.Continent", "sql": "select continents.Continent , count ( car_makers.* )  from car_makers  group by continents.Continent "}, {"NatSQL": "select continents.Continent , count ( car_makers.* ) group by continents.Continent", "sql": "select continents.Continent , count ( car_makers.* )  from car_makers  group by continents.Continent "}, {"NatSQL": "select countries.CountryName group by car_makers.Country order by count ( car_makers.* ) desc limit 1", "sql": "select countries.CountryName from car_makers  group by car_makers.Country  order by count ( car_makers.* )  desc limit 1"}, {"NatSQL": "select countries.CountryName group by car_makers.Country order by count ( car_makers.* ) desc limit 1", "sql": "select countries.CountryName from car_makers  group by car_makers.Country  order by count ( car_makers.* )  desc limit 1"}, {"NatSQL": "select count ( model_list.* ) , car_makers.FullName group by car_makers.Id", "sql": "select count ( model_list.* )  , car_makers.FullName  from model_list  group by car_makers.Id "}, {"NatSQL": "select count ( model_list.* ) , car_makers.FullName, car_makers.id group by car_makers.Id", "sql": "select count ( model_list.* )  , car_makers.FullName, car_makers.id   from model_list  group by car_makers.Id "}, {"NatSQL": "select cars_data.Accelerate where car_names.Make = \"amc hornet sportabout (sw)\"", "sql": "select cars_data.Accelerate from cars_data  where  car_names.Make = \"amc hornet sportabout (sw)\" "}, {"NatSQL": "select cars_data.Accelerate where car_names.Make = \"amc hornet sportabout (sw)\"", "sql": "select cars_data.Accelerate from cars_data  where  car_names.Make = \"amc hornet sportabout (sw)\" "}, {"NatSQL": "select count ( car_makers.* ) where countries.CountryName = \"france\"", "sql": "select count ( car_makers.* )  from car_makers  where  countries.CountryName = \"france\" "}, {"NatSQL": "select count ( car_makers.* ) where countries.CountryName = \"france\"", "sql": "select count ( car_makers.* )  from car_makers  where  countries.CountryName = \"france\" "}, {"NatSQL": "select count ( model_list.* ) where countries.CountryName = \"usa\"", "sql": "select count ( model_list.* )  from model_list  where  countries.CountryName = \"usa\" "}, {"NatSQL": "select count ( model_list.* ) where countries.CountryName = \"usa\"", "sql": "select count ( model_list.* )  from model_list  where  countries.CountryName = \"usa\" "}, {"NatSQL": "select avg ( cars_data.MPG ) where cars_data.Cylinders = 4", "sql": "select avg ( cars_data.MPG )  from cars_data  where  cars_data.Cylinders = 4 "}, {"NatSQL": "select avg ( cars_data.MPG ) where cars_data.Cylinders = 4", "sql": "select avg ( cars_data.MPG )  from cars_data  where  cars_data.Cylinders = 4 "}, {"NatSQL": "select min(cars_data.Weight) where cars_data.Cylinders = 8 and cars_data.Year = 1974", "sql": "select min(cars_data.Weight) from cars_data  where  cars_data.Cylinders = 8  and  cars_data.Year = 1974"}, {"NatSQL": "select min(cars_data.Weight) where cars_data.Cylinders = 8 and cars_data.Year = 1974", "sql": "select min(cars_data.Weight) from cars_data  where  cars_data.Cylinders = 8  and  cars_data.Year = 1974"}, {"NatSQL": "select model_list.Maker , model_list.Model", "sql": "select model_list.Maker , model_list.Model from model_list "}, {"NatSQL": "select model_list.Maker , model_list.Model", "sql": "select model_list.Maker , model_list.Model from model_list "}, {"NatSQL": "select countries.CountryName , countries.CountryId where count ( car_makers.* ) >= 1 group by countries.CountryId", "sql": "select countries.CountryName , countries.CountryId from car_makers  where  count ( car_makers.* )  >= 1  group by countries.CountryId "}, {"NatSQL": "select countries.CountryName , countries.CountryId where count ( car_makers.* ) >= 1 group by countries.CountryId", "sql": "select countries.CountryName , countries.CountryId from car_makers  where  count ( car_makers.* )  >= 1  group by countries.CountryId "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Horsepower > 150", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Horsepower > 150 "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Horsepower > 150", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Horsepower > 150 "}, {"NatSQL": "select avg ( cars_data.Weight ) , cars_data.Year group by cars_data.Year", "sql": "select avg ( cars_data.Weight )  , cars_data.Year from cars_data  group by cars_data.Year "}, {"NatSQL": "select avg ( cars_data.Weight ) , cars_data.Year group by cars_data.Year", "sql": "select avg ( cars_data.Weight )  , cars_data.Year from cars_data  group by cars_data.Year "}, {"NatSQL": "select countries.CountryName where continents.Continent = \"europe\" and count ( car_makers.* ) >= 3 group by countries.CountryName", "sql": "select countries.CountryName from car_makers  where  continents.Continent = \"europe\"  and  count ( car_makers.* )  >= 3  group by countries.CountryName "}, {"NatSQL": "select countries.CountryName where continents.Continent = \"europe\" and count ( car_makers.* ) >= 3 group by countries.CountryName", "sql": "select countries.CountryName from car_makers  where  continents.Continent = \"europe\"  and  count ( car_makers.* )  >= 3  group by countries.CountryName "}, {"NatSQL": "select cars_data.Horsepower , car_names.Make where cars_data.Cylinders = 3 order by cars_data.Horsepower desc limit 1", "sql": "select cars_data.Horsepower , car_names.Make from car_names  where  cars_data.Cylinders = 3  order by cars_data.Horsepower desc limit 1"}, {"NatSQL": "select cars_data.Horsepower , car_names.Make where cars_data.Cylinders = 3 order by cars_data.Horsepower desc limit 1", "sql": "select cars_data.Horsepower , car_names.Make from car_names  where  cars_data.Cylinders = 3  order by cars_data.Horsepower desc limit 1"}, {"NatSQL": "select car_names.Model order by cars_data.MPG desc limit 1", "sql": "select car_names.Model from cars_data  order by cars_data.MPG desc limit 1"}, {"NatSQL": "select car_names.Model order by cars_data.MPG desc limit 1", "sql": "select car_names.Model from car_names  order by cars_data.MPG desc limit 1"}, {"NatSQL": "select avg ( cars_data.Horsepower ) where cars_data.Year < 1980", "sql": "select avg ( cars_data.Horsepower )  from cars_data  where  cars_data.Year < 1980 "}, {"NatSQL": "select avg ( cars_data.Horsepower ) where cars_data.Year < 1980", "sql": "select avg ( cars_data.Horsepower )  from cars_data  where  cars_data.Year < 1980 "}, {"NatSQL": "select avg ( cars_data.Edispl ) where car_names.Model = \"volvo\"", "sql": "select avg ( cars_data.Edispl )  from car_names  where  car_names.Model = \"volvo\" "}, {"NatSQL": "select avg ( cars_data.Edispl ) where car_names.Model = \"volvo\"", "sql": "select avg ( cars_data.Edispl )  from car_names  where  car_names.Model = \"volvo\" "}, {"NatSQL": "select max ( cars_data.Accelerate ) , cars_data.Cylinders group by cars_data.Cylinders", "sql": "select max ( cars_data.Accelerate )  , cars_data.Cylinders from cars_data  group by cars_data.Cylinders "}, {"NatSQL": "select max ( cars_data.Accelerate ) , cars_data.Cylinders group by cars_data.Cylinders", "sql": "select max ( cars_data.Accelerate )  , cars_data.Cylinders from cars_data  group by cars_data.Cylinders "}, {"NatSQL": "select car_names.Model group by car_names.Model order by count ( car_names.* ) desc limit 1", "sql": "select car_names.Model from car_names  group by car_names.Model  order by count ( car_names.* )  desc limit 1"}, {"NatSQL": "select car_names.Model group by car_names.Model order by count ( car_names.* ) desc limit 1", "sql": "select car_names.Model from car_names  group by car_names.Model  order by count ( car_names.* )  desc limit 1"}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Cylinders > 4", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Cylinders > 4 "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Cylinders > 4", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Cylinders > 4 "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Year = 1980", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Year = 1980 "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Year = 1980", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Year = 1980 "}, {"NatSQL": "select count ( model_list.* ) where car_makers.FullName = \"American Motor Company\"", "sql": "select count ( model_list.* )  from model_list  where  car_makers.FullName = \"American Motor Company\" "}, {"NatSQL": "select count ( model_list.* ) where car_makers.FullName = \"American Motor Company\"", "sql": "select count ( model_list.* )  from model_list  where  car_makers.FullName = \"American Motor Company\" "}, {"NatSQL": "select car_makers.FullName , car_makers.Id where count ( model_list.* ) > 3 group by car_makers.Id", "sql": "select car_makers.FullName , car_makers.Id from model_list  where  count ( model_list.* )  > 3  group by car_makers.Id "}, {"NatSQL": "select car_makers.FullName , car_makers.Id where count ( model_list.* ) > 3 group by car_makers.Id", "sql": "select car_makers.FullName , car_makers.Id from model_list  where  count ( model_list.* )  > 3  group by car_makers.Id "}, {"NatSQL": "select distinct model_list.Model where car_makers.FullName = \"General Motors\" or cars_data.Weight > 3500", "sql": "select  distinct model_list.Model from car_names  where  car_makers.FullName = \"General Motors\"  or  cars_data.Weight > 3500 "}, {"NatSQL": "select distinct model_list.Model where car_makers.FullName = \"General Motors\" or cars_data.Weight > 3500", "sql": "select  distinct model_list.Model from car_names  where  car_makers.FullName = \"General Motors\"  or  cars_data.Weight > 3500 "}, {"NatSQL": "select distinct cars_data.Year where cars_data.Weight between 3000 and 4000", "sql": "select  distinct cars_data.Year from cars_data  where  cars_data.Weight between 3000 and 4000 "}, {"NatSQL": "select distinct cars_data.Year where cars_data.Weight between 3000 and 4000", "sql": "select  distinct cars_data.Year from cars_data  where  cars_data.Weight between 3000 and 4000 "}, {"NatSQL": "select cars_data.Horsepower order by cars_data.Accelerate desc limit 1", "sql": "select cars_data.Horsepower from cars_data  order by cars_data.Accelerate desc limit 1"}, {"NatSQL": "select cars_data.Horsepower order by cars_data.Accelerate desc limit 1", "sql": "select cars_data.Horsepower from cars_data  order by cars_data.Accelerate desc limit 1"}, {"NatSQL": "select cars_data.Cylinders where car_names.Model = \"volvo\" order by cars_data.Accelerate asc limit 1", "sql": "select cars_data.Cylinders from cars_data  where  car_names.Model = \"volvo\"  order by cars_data.Accelerate asc limit 1"}, {"NatSQL": "select cars_data.Cylinders where car_names.Model = \"volvo\" order by cars_data.Accelerate asc limit 1", "sql": "select cars_data.Cylinders from cars_data  where  car_names.Model = \"volvo\"  order by cars_data.Accelerate asc limit 1"}, {"NatSQL": "select count ( cars_data.* ) where @.@ > cars_data.Accelerate order by cars_data.Horsepower desc limit 1", "sql": "select count ( cars_data.* )  from cars_data  where  @.@ > cars_data.Accelerate  order by cars_data.Horsepower desc limit 1"}, {"NatSQL": "select count ( cars_data.* ) where @.@ > cars_data.Accelerate order by cars_data.Horsepower desc limit 1", "sql": "select count ( cars_data.* )  from cars_data  where  @.@ > cars_data.Accelerate  order by cars_data.Horsepower desc limit 1"}, {"NatSQL": "select count ( countries.* ) where count ( car_makers.* ) > 2", "sql": "select count ( countries.* )  from countries  where  count ( car_makers.* )  > 2 "}, {"NatSQL": "select count ( countries.* ) where count ( car_makers.* ) > 2", "sql": "select count ( countries.* )  from countries  where  count ( car_makers.* )  > 2 "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Cylinders > 6", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Cylinders > 6 "}, {"NatSQL": "select count ( cars_data.* ) where cars_data.Cylinders > 6", "sql": "select count ( cars_data.* )  from cars_data  where  cars_data.Cylinders > 6 "}, {"NatSQL": "select car_names.Model where cars_data.Cylinders = 4 order by cars_data.Horsepower desc limit 1", "sql": "select car_names.Model from car_names  where  cars_data.Cylinders = 4  order by cars_data.Horsepower desc limit 1"}, {"NatSQL": "select car_names.Model where cars_data.Cylinders = 4 order by cars_data.Horsepower desc limit 1", "sql": "select car_names.Model from car_names  where  cars_data.Cylinders = 4  order by cars_data.Horsepower desc limit 1"}, {"NatSQL": "select car_names.MakeId , car_names.Make where cars_data.Cylinders <= 3 and @.@ > min ( cars_data.Horsepower )", "sql": "select car_names.MakeId , car_names.Make from cars_data  where  cars_data.Cylinders <= 3  and  @.@ > min ( cars_data.Horsepower )  "}, {"NatSQL": "select car_names.MakeId , car_names.Make where cars_data.Cylinders < 4 and @.@ > min ( cars_data.Horsepower )", "sql": "select car_names.MakeId , car_names.Make from cars_data  where  cars_data.Cylinders < 4  and  @.@ > min ( cars_data.Horsepower )  "}, {"NatSQL": "select max(cars_data.MPG) where cars_data.Cylinders = 8 or cars_data.Year < 1980", "sql": "select max(cars_data.MPG) from cars_data  where  cars_data.Cylinders = 8  or  cars_data.Year < 1980"}, {"NatSQL": "select max(cars_data.MPG) where cars_data.Cylinders = 8 or cars_data.Year < 1980", "sql": "select max(cars_data.MPG) from cars_data  where  cars_data.Cylinders = 8  or  cars_data.Year < 1980"}, {"NatSQL": "select distinct model_list.Model where cars_data.Weight < 3500 and car_makers.FullName != \"Ford Motor Company\"", "sql": "select  distinct model_list.Model from model_list  where  cars_data.Weight < 3500  and  car_makers.FullName != \"Ford Motor Company\" "}, {"NatSQL": "select distinct model_list.Model where cars_data.Weight < 3500 and car_makers.FullName != \"Ford Motor Company\"", "sql": "select  distinct model_list.Model from model_list  where  cars_data.Weight < 3500  and  car_makers.FullName != \"Ford Motor Company\" "}, {"NatSQL": "select countries.CountryName where except_ @.@ is car_makers.*", "sql": "select countries.CountryName from countries  where  except_  @.@ is car_makers.* "}, {"NatSQL": "select countries.CountryName where except_ @.@ is car_makers.*", "sql": "select countries.CountryName from countries  where  except_  @.@ is car_makers.* "}, {"NatSQL": "select car_makers.Id , car_makers.Maker where count ( model_list.* ) >= 2 and count ( car_names.* ) > 3 group by car_makers.Id", "sql": "select car_makers.Id , car_makers.Maker from car_makers  where  count ( model_list.* )  >= 2  and  count ( car_names.* )  > 3  group by car_makers.Id "}, {"NatSQL": "select car_makers.Id , car_makers.Maker where count ( model_list.* ) >= 2 and count ( car_names.* ) > 3 group by car_makers.Id", "sql": "select car_makers.Id , car_makers.Maker from car_makers  where  count ( model_list.* )  >= 2  and  count ( car_names.* )  > 3  group by car_makers.Id "}, {"NatSQL": "select countries.CountryId , countries.CountryName where count ( car_makers.* ) > 3 or model_list.Model = \"fiat\" group by countries.CountryId", "sql": "select countries.CountryId , countries.CountryName from countries  where  count ( car_makers.* )  > 3  or  model_list.Model = \"fiat\"  group by countries.CountryId "}, {"NatSQL": "select countries.CountryId , countries.CountryName where count ( car_makers.* ) > 3 or model_list.Model = \"fiat\" group by countries.CountryId", "sql": "select countries.CountryId , countries.CountryName from car_makers  where  count ( car_makers.* )  > 3  or  model_list.Model = \"fiat\"  group by countries.CountryId "}, {"NatSQL": "select airlines.Country where airlines.Airline = \"JetBlue Airways\"", "sql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\" "}, {"NatSQL": "select airlines.Country where airlines.Airline = \"JetBlue Airways\"", "sql": "select airlines.Country from airlines  where  airlines.Airline = \"JetBlue Airways\" "}, {"NatSQL": "select airlines.Abbreviation where airlines.Airline = \"JetBlue Airways\"", "sql": "select airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\" "}, {"NatSQL": "select airlines.Abbreviation where airlines.Airline = \"JetBlue Airways\"", "sql": "select airlines.Abbreviation from airlines  where  airlines.Airline = \"JetBlue Airways\" "}, {"NatSQL": "select airlines.Airline , airlines.Abbreviation where airlines.Country = \"USA\"", "sql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\" "}, {"NatSQL": "select airlines.Airline , airlines.Abbreviation where airlines.Country = \"USA\"", "sql": "select airlines.Airline , airlines.Abbreviation from airlines  where  airlines.Country = \"USA\" "}, {"NatSQL": "select airports.AirportCode , airports.AirportName where airports.City = \"Anthony\"", "sql": "select airports.AirportCode , airports.AirportName from airports  where  airports.City = \"Anthony\" "}, {"NatSQL": "select airports.AirportCode , airports.AirportName where airports.City = \"Anthony\"", "sql": "select airports.AirportCode , airports.AirportName from airports  where  airports.City = \"Anthony\" "}, {"NatSQL": "select count ( airlines.* )", "sql": "select count ( airlines.* )  from airlines "}, {"NatSQL": "select count ( airlines.* )", "sql": "select count ( airlines.* )  from airlines "}, {"NatSQL": "select count ( airports.* )", "sql": "select count ( airports.* )  from airports "}, {"NatSQL": "select count ( airports.* )", "sql": "select count ( airports.* )  from airports "}, {"NatSQL": "select count ( flights.* )", "sql": "select count ( flights.* )  from flights "}, {"NatSQL": "select count ( flights.* )", "sql": "select count ( flights.* )  from flights "}, {"NatSQL": "select airlines.Airline where airlines.Abbreviation = \"UAL\"", "sql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "}, {"NatSQL": "select airlines.Airline where airlines.Abbreviation = \"UAL\"", "sql": "select airlines.Airline from airlines  where  airlines.Abbreviation = \"UAL\" "}, {"NatSQL": "select count ( airlines.* ) where airlines.Country = \"USA\"", "sql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\" "}, {"NatSQL": "select count ( airlines.* ) where airlines.Country = \"USA\"", "sql": "select count ( airlines.* )  from airlines  where  airlines.Country = \"USA\" "}, {"NatSQL": "select airports.City , airports.Country where airports.AirportName = \"Alton\"", "sql": "select airports.City , airports.Country from airports  where  airports.AirportName = \"Alton\" "}, {"NatSQL": "select airports.City , airports.Country where airports.AirportName = \"Alton\"", "sql": "select airports.City , airports.Country from airports  where  airports.AirportName = \"Alton\" "}, {"NatSQL": "select airports.AirportName where airports.AirportCode = \"AKO\"", "sql": "select airports.AirportName from airports  where  airports.AirportCode = \"AKO\" "}, {"NatSQL": "select airports.AirportName where airports.AirportCode = \"AKO\"", "sql": "select airports.AirportName from airports  where  airports.AirportCode = \"AKO\" "}, {"NatSQL": "select airports.AirportName where airports.City = \"Aberdeen\"", "sql": "select airports.AirportName from airports  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select airports.AirportName where airports.City = \"Aberdeen\"", "sql": "select airports.AirportName from airports  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where flights.SourceAirport = \"APG\"", "sql": "select count ( flights.* )  from flights  where  flights.SourceAirport = \"APG\" "}, {"NatSQL": "select count ( flights.* ) where flights.SourceAirport = \"APG\"", "sql": "select count ( flights.* )  from flights  where  flights.SourceAirport = \"APG\" "}, {"NatSQL": "select count ( flights.* ) where flights.DestAirport = \"ATO\"", "sql": "select count ( flights.* )  from flights  where  flights.DestAirport = \"ATO\" "}, {"NatSQL": "select count ( flights.* ) where flights.DestAirport = \"ATO\"", "sql": "select count ( flights.* )  from flights  where  flights.DestAirport = \"ATO\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Ashley\" and airports.City = \"Aberdeen\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Ashley\"  and  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Ashley\" and airports.City = \"Aberdeen\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Ashley\"  and  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airlines.Airline = \"JetBlue Airways\"", "sql": "select count ( flights.* )  from flights  where  airlines.Airline = \"JetBlue Airways\" "}, {"NatSQL": "select count ( flights.* ) where airlines.Airline = \"JetBlue Airways\"", "sql": "select count ( flights.* )  from flights  where  airlines.Airline = \"JetBlue Airways\" "}, {"NatSQL": "select count ( airlines.* ) where airlines.Airline = \"United Airlines\" and flights.DestAirport = \"ASY\"", "sql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"ASY\" "}, {"NatSQL": "select count ( airlines.* ) where airlines.Airline = \"United Airlines\" and flights.DestAirport = \"ASY\"", "sql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.DestAirport = \"ASY\" "}, {"NatSQL": "select count ( airlines.* ) where airlines.Airline = \"United Airlines\" and flights.SourceAirport = \"AHD\"", "sql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"AHD\" "}, {"NatSQL": "select count ( airlines.* ) where airlines.Airline = \"United Airlines\" and flights.SourceAirport = \"AHD\"", "sql": "select count ( airlines.* )  from airlines  where  airlines.Airline = \"United Airlines\"  and  flights.SourceAirport = \"AHD\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\" and airlines.Airline = \"United Airlines\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\"  and  airlines.Airline = \"United Airlines\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\" and airlines.Airline = \"United Airlines\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\"  and  airlines.Airline = \"United Airlines\" "}, {"NatSQL": "select airports.City group by airports.City order by count ( flights.* ) desc limit 1", "sql": "select airports.City from flights  group by airports.City  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airports.City group by airports.City order by count ( flights.* ) desc limit 1", "sql": "select airports.City from flights  group by airports.City  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airports.City group by airports.City order by count ( flights.* ) desc limit 1", "sql": "select airports.City from airports  group by airports.City  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airports.City where @.@ join flights.* group by airports.City order by count ( airports.* ) desc limit 1", "sql": "select airports.City from airports  where  @.@ join flights.*  group by airports.City  order by count ( airports.* )  desc limit 1"}, {"NatSQL": "select airports.AirportCode group by airports.AirportCode order by count ( flights.* ) desc limit 1", "sql": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airports.AirportCode group by airports.AirportCode order by count ( flights.* ) desc limit 1", "sql": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airports.AirportCode group by airports.AirportCode order by count ( flights.* ) asc limit 1", "sql": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  asc limit 1"}, {"NatSQL": "select airports.AirportCode group by airports.AirportCode order by count ( flights.* ) asc limit 1", "sql": "select airports.AirportCode from airports  group by airports.AirportCode  order by count ( flights.* )  asc limit 1"}, {"NatSQL": "select airlines.Airline group by airlines.Airline order by count ( flights.* ) desc limit 1", "sql": "select airlines.Airline from airlines  group by airlines.Airline  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airlines.Airline group by airlines.Airline order by count ( flights.* ) desc limit 1", "sql": "select airlines.Airline from airlines  group by airlines.Airline  order by count ( flights.* )  desc limit 1"}, {"NatSQL": "select airlines.Abbreviation , airlines.Country group by airlines.Airline order by count ( flights.* ) asc limit 1", "sql": "select airlines.Abbreviation , airlines.Country from airlines  group by airlines.Airline  order by count ( flights.* )  asc limit 1"}, {"NatSQL": "select airlines.Abbreviation , airlines.Country group by airlines.Airline order by count ( flights.* ) asc limit 1", "sql": "select airlines.Abbreviation , airlines.Country from airlines  group by airlines.Airline  order by count ( flights.* )  asc limit 1"}, {"NatSQL": "select airlines.Airline where flights.SourceAirport = \"AHD\"", "sql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\" "}, {"NatSQL": "select airlines.Airline where flights.SourceAirport = \"AHD\"", "sql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"AHD\" "}, {"NatSQL": "select airlines.Airline where flights.DestAirport = \"AHD\"", "sql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\" "}, {"NatSQL": "select airlines.Airline where flights.DestAirport = \"AHD\"", "sql": "select airlines.Airline from airlines  where  flights.DestAirport = \"AHD\" "}, {"NatSQL": "select airlines.Airline where flights.SourceAirport = \"APG\" and flights.SourceAirport = \"CVO\"", "sql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "}, {"NatSQL": "select airlines.Airline where flights.SourceAirport = \"APG\" and flights.SourceAirport = \"CVO\"", "sql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"APG\"  and  flights.SourceAirport = \"CVO\" "}, {"NatSQL": "select airlines.Airline where flights.SourceAirport = \"CVO\" and flights.SourceAirport != \"APG\"", "sql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"CVO\"  and  flights.SourceAirport != \"APG\" "}, {"NatSQL": "select airlines.Airline where flights.SourceAirport = \"CVO\" and flights.SourceAirport != \"APG\"", "sql": "select airlines.Airline from airlines  where  flights.SourceAirport = \"CVO\"  and  flights.SourceAirport != \"APG\" "}, {"NatSQL": "select airlines.Airline where count ( flights.* ) > 10 group by airlines.Airline", "sql": "select airlines.Airline from flights  where  count ( flights.* )  > 10  group by airlines.Airline "}, {"NatSQL": "select airlines.Airline where count ( flights.* ) > 10 group by airlines.Airline", "sql": "select airlines.Airline from flights  where  count ( flights.* )  > 10  group by airlines.Airline "}, {"NatSQL": "select airlines.Airline where count ( flights.* ) < 200 group by airlines.Airline", "sql": "select airlines.Airline from flights  where  count ( flights.* )  < 200  group by airlines.Airline "}, {"NatSQL": "select airlines.Airline where count ( flights.* ) < 200 group by airlines.Airline", "sql": "select airlines.Airline from flights  where  count ( flights.* )  < 200  group by airlines.Airline "}, {"NatSQL": "select flights.FlightNo where airlines.Airline = \"United Airlines\"", "sql": "select flights.FlightNo from airlines  where  airlines.Airline = \"United Airlines\" "}, {"NatSQL": "select flights.FlightNo where airlines.Airline = \"United Airlines\"", "sql": "select flights.FlightNo from flights  where  airlines.Airline = \"United Airlines\" "}, {"NatSQL": "select flights.FlightNo where flights.SourceAirport = \"APG\"", "sql": "select flights.FlightNo from flights  where  flights.SourceAirport = \"APG\" "}, {"NatSQL": "select flights.FlightNo where flights.SourceAirport = \"APG\"", "sql": "select flights.FlightNo from flights  where  flights.SourceAirport = \"APG\" "}, {"NatSQL": "select flights.FlightNo where flights.DestAirport = \"APG\"", "sql": "select flights.FlightNo from flights  where  flights.DestAirport = \"APG\" "}, {"NatSQL": "select flights.FlightNo where flights.DestAirport = \"APG\"", "sql": "select flights.FlightNo from flights  where  flights.DestAirport = \"APG\" "}, {"NatSQL": "select flights.FlightNo where airports.City = \"Aberdeen\"", "sql": "select flights.FlightNo from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select flights.FlightNo where airports.City = \"Aberdeen\"", "sql": "select flights.FlightNo from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select flights.FlightNo where airports.City = \"Aberdeen\"", "sql": "select flights.FlightNo from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select flights.FlightNo where airports.City = \"Aberdeen\"", "sql": "select flights.FlightNo from flights  where  airports.City = \"Aberdeen\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\" or airports.City = \"Abilene\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\"  or  airports.City = \"Abilene\" "}, {"NatSQL": "select count ( flights.* ) where airports.City = \"Aberdeen\" or airports.City = \"Abilene\"", "sql": "select count ( flights.* )  from flights  where  airports.City = \"Aberdeen\"  or  airports.City = \"Abilene\" "}, {"NatSQL": "select airports.AirportName where @.@ not in flights.SourceAirport and @.@ not in flights.DestAirport", "sql": "select airports.AirportName from airports  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "}, {"NatSQL": "select airports.AirportName where @.@ not in flights.SourceAirport and @.@ not in flights.DestAirport", "sql": "select airports.AirportName from airports  where  @.@ not in flights.SourceAirport  and  @.@ not in flights.DestAirport "}, {"NatSQL": "select count ( employee.* )", "sql": "select count ( employee.* )  from employee "}, {"NatSQL": "select count ( employee.* )", "sql": "select count ( employee.* )  from employee "}, {"NatSQL": "select employee.Name order by employee.Age asc", "sql": "select employee.Name from employee  order by employee.Age asc"}, {"NatSQL": "select employee.Name order by employee.Age asc", "sql": "select employee.Name from employee  order by employee.Age asc"}, {"NatSQL": "select count ( employee.* ) , employee.City group by employee.City", "sql": "select count ( employee.* )  , employee.City from employee  group by employee.City "}, {"NatSQL": "select count ( employee.* ) , employee.City group by employee.City", "sql": "select count ( employee.* )  , employee.City from employee  group by employee.City "}, {"NatSQL": "select employee.City where employee.Age < 30 and count ( employee.* ) > 1 group by employee.City", "sql": "select employee.City from employee  where  employee.Age < 30  and  count ( employee.* )  > 1  group by employee.City "}, {"NatSQL": "select employee.City where employee.Age < 30 and count ( employee.* ) > 1 group by employee.City", "sql": "select employee.City from employee  where  employee.Age < 30  and  count ( employee.* )  > 1  group by employee.City "}, {"NatSQL": "select count ( shop.* ) , shop.Location group by shop.Location", "sql": "select count ( shop.* )  , shop.Location from shop  group by shop.Location "}, {"NatSQL": "select count ( shop.* ) , shop.Location group by shop.Location", "sql": "select count ( shop.* )  , shop.Location from shop  group by shop.Location "}, {"NatSQL": "select shop.Manager_name , shop.District order by shop.Number_products desc limit 1", "sql": "select shop.Manager_name , shop.District from shop  order by shop.Number_products desc limit 1"}, {"NatSQL": "select shop.Manager_name , shop.District order by shop.Number_products desc limit 1", "sql": "select shop.Manager_name , shop.District from shop  order by shop.Number_products desc limit 1"}, {"NatSQL": "select min ( shop.Number_products ) , max ( shop.Number_products )", "sql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from shop "}, {"NatSQL": "select min ( shop.Number_products ) , max ( shop.Number_products )", "sql": "select min ( shop.Number_products )  , max ( shop.Number_products )  from shop "}, {"NatSQL": "select shop.Name , shop.Location , shop.District order by shop.Number_products desc", "sql": "select shop.Name , shop.Location , shop.District from shop  order by shop.Number_products desc"}, {"NatSQL": "select shop.Name , shop.Location , shop.District order by shop.Number_products desc", "sql": "select shop.Name , shop.Location , shop.District from shop  order by shop.Number_products desc"}, {"NatSQL": "select shop.Name where @.@ > avg ( shop.Number_products )", "sql": "select shop.Name from shop  where  @.@ > avg ( shop.Number_products )  "}, {"NatSQL": "select shop.Name where @.@ > avg ( shop.Number_products )", "sql": "select shop.Name from shop  where  @.@ > avg ( shop.Number_products )  "}, {"NatSQL": "select employee.Name group by evaluation.Employee_ID order by count ( evaluation.* ) desc limit 1", "sql": "select employee.Name from evaluation  group by evaluation.Employee_ID  order by count ( evaluation.* )  desc limit 1"}, {"NatSQL": "select employee.Name group by evaluation.Employee_ID order by count ( evaluation.* ) desc limit 1", "sql": "select employee.Name from evaluation  group by evaluation.Employee_ID  order by count ( evaluation.* )  desc limit 1"}, {"NatSQL": "select employee.Name order by evaluation.Bonus desc limit 1", "sql": "select employee.Name from employee  order by evaluation.Bonus desc limit 1"}, {"NatSQL": "select employee.Name order by evaluation.Bonus desc limit 1", "sql": "select employee.Name from employee  order by evaluation.Bonus desc limit 1"}, {"NatSQL": "select employee.Name where @.@ not in evaluation.*", "sql": "select employee.Name from employee  where  @.@ not in evaluation.* "}, {"NatSQL": "select employee.Name where @.@ not in evaluation.*", "sql": "select employee.Name from employee  where  @.@ not in evaluation.* "}, {"NatSQL": "select shop.Name group by hiring.Shop_ID order by count ( hiring.* ) desc limit 1", "sql": "select shop.Name from hiring  group by hiring.Shop_ID  order by count ( hiring.* )  desc limit 1"}, {"NatSQL": "select shop.Name group by hiring.Shop_ID order by count ( hiring.* ) desc limit 1", "sql": "select shop.Name from hiring  group by hiring.Shop_ID  order by count ( hiring.* )  desc limit 1"}, {"NatSQL": "select shop.Name where @.@ not in hiring.*", "sql": "select shop.Name from shop  where  @.@ not in hiring.* "}, {"NatSQL": "select shop.Name where @.@ not in hiring.*", "sql": "select shop.Name from shop  where  @.@ not in hiring.* "}, {"NatSQL": "select count ( hiring.* ) , shop.Name group by shop.Name", "sql": "select count ( hiring.* )  , shop.Name from hiring  group by shop.Name "}, {"NatSQL": "select count ( hiring.* ) , shop.Name group by shop.Name", "sql": "select count ( hiring.* )  , shop.Name from hiring  group by shop.Name "}, {"NatSQL": "select sum ( evaluation.Bonus )", "sql": "select sum ( evaluation.Bonus )  from evaluation "}, {"NatSQL": "select sum ( evaluation.Bonus )", "sql": "select sum ( evaluation.Bonus )  from evaluation "}, {"NatSQL": "select hiring.*", "sql": "select hiring.* from hiring "}, {"NatSQL": "select hiring.*", "sql": "select hiring.* from hiring "}, {"NatSQL": "select shop.District where shop.Number_products < 3000 and shop.Number_products > 10000", "sql": "select shop.District from shop  where  shop.Number_products < 3000  and  shop.Number_products > 10000 "}, {"NatSQL": "select shop.District where shop.Number_products < 3000 and shop.Number_products > 10000", "sql": "select shop.District from shop  where  shop.Number_products < 3000  and  shop.Number_products > 10000 "}, {"NatSQL": "select count ( distinct shop.Location )", "sql": "select count (  distinct shop.Location )  from shop "}, {"NatSQL": "select count ( distinct shop.Location )", "sql": "select count (  distinct shop.Location )  from shop "}, {"NatSQL": "select count ( documents.* )", "sql": "select count ( documents.* )  from documents "}, {"NatSQL": "select count ( documents.* )", "sql": "select count ( documents.* )  from documents "}, {"NatSQL": "select documents.Document_ID , documents.Document_Name , documents.Document_Description", "sql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from documents "}, {"NatSQL": "select documents.Document_ID , documents.Document_Name , documents.Document_Description", "sql": "select documents.Document_ID , documents.Document_Name , documents.Document_Description from documents "}, {"NatSQL": "select documents.Document_Name , documents.Template_ID where documents.Document_Description like \"%w%\"", "sql": "select documents.Document_Name , documents.Template_ID from documents  where  documents.Document_Description like \"%w%\" "}, {"NatSQL": "select documents.Document_Name , documents.Template_ID where documents.Document_Description like \"%w%\"", "sql": "select documents.Document_Name , documents.Template_ID from documents  where  documents.Document_Description like \"%w%\" "}, {"NatSQL": "select documents.Document_ID , documents.Template_ID , documents.Document_Description where documents.Document_Name = \"Robbin CV\"", "sql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from documents  where  documents.Document_Name = \"Robbin CV\" "}, {"NatSQL": "select documents.Document_ID , documents.Template_ID , documents.Document_Description where documents.Document_Name = \"Robbin CV\"", "sql": "select documents.Document_ID , documents.Template_ID , documents.Document_Description from documents  where  documents.Document_Name = \"Robbin CV\" "}, {"NatSQL": "select count ( distinct documents.Template_ID )", "sql": "select count (  distinct documents.Template_ID )  from documents "}, {"NatSQL": "select count ( distinct documents.Template_ID )", "sql": "select count (  distinct documents.Template_ID )  from documents "}, {"NatSQL": "select count ( documents.* ) where templates.Template_Type_Code = \"PPT\"", "sql": "select count ( documents.* )  from documents  where  templates.Template_Type_Code = \"PPT\" "}, {"NatSQL": "select count ( documents.* ) where templates.Template_Type_Code = \"PPT\"", "sql": "select count ( documents.* )  from documents  where  templates.Template_Type_Code = \"PPT\" "}, {"NatSQL": "select documents.Template_ID , count ( documents.* ) group by documents.Template_ID", "sql": "select documents.Template_ID , count ( documents.* )  from documents  group by documents.Template_ID "}, {"NatSQL": "select documents.Template_ID , count ( documents.* ) group by documents.Template_ID", "sql": "select documents.Template_ID , count ( documents.* )  from documents  group by documents.Template_ID "}, {"NatSQL": "select templates.Template_ID , templates.Template_Type_Code group by documents.Template_ID order by count ( documents.* ) desc limit 1", "sql": "select templates.Template_ID , templates.Template_Type_Code from documents  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"}, {"NatSQL": "select templates.Template_ID , templates.Template_Type_Code group by documents.Template_ID order by count ( documents.* ) desc limit 1", "sql": "select templates.Template_ID , templates.Template_Type_Code from documents  group by documents.Template_ID  order by count ( documents.* )  desc limit 1"}, {"NatSQL": "select documents.Template_ID where count ( documents.* ) > 1 group by documents.Template_ID", "sql": "select documents.Template_ID from documents  where  count ( documents.* )  > 1  group by documents.Template_ID "}, {"NatSQL": "select documents.Template_ID where count ( documents.* ) > 1 group by documents.Template_ID", "sql": "select documents.Template_ID from documents  where  count ( documents.* )  > 1  group by documents.Template_ID "}, {"NatSQL": "select templates.Template_ID where except_ @.@ is documents.*", "sql": "select templates.Template_ID from templates  where  except_  @.@ is documents.* "}, {"NatSQL": "select templates.Template_ID where except_ @.@ is documents.*", "sql": "select templates.Template_ID from templates  where  except_  @.@ is documents.* "}, {"NatSQL": "select count ( templates.* )", "sql": "select count ( templates.* )  from templates "}, {"NatSQL": "select count ( templates.* )", "sql": "select count ( templates.* )  from templates "}, {"NatSQL": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code", "sql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from templates "}, {"NatSQL": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code", "sql": "select templates.Template_ID , templates.Version_Number , templates.Template_Type_Code from templates "}, {"NatSQL": "select distinct templates.Template_Type_Code", "sql": "select  distinct templates.Template_Type_Code from templates "}, {"NatSQL": "select distinct templates.Template_Type_Code", "sql": "select  distinct templates.Template_Type_Code from templates "}, {"NatSQL": "select templates.Template_ID where templates.Template_Type_Code = \"PP\" or templates.Template_Type_Code = \"PPT\"", "sql": "select templates.Template_ID from templates  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "}, {"NatSQL": "select templates.Template_ID where templates.Template_Type_Code = \"PP\" or templates.Template_Type_Code = \"PPT\"", "sql": "select templates.Template_ID from templates  where  templates.Template_Type_Code = \"PP\"  or  templates.Template_Type_Code = \"PPT\" "}, {"NatSQL": "select count ( templates.* ) where templates.Template_Type_Code = \"CV\"", "sql": "select count ( templates.* )  from templates  where  templates.Template_Type_Code = \"CV\" "}, {"NatSQL": "select count ( templates.* ) where templates.Template_Type_Code = \"CV\"", "sql": "select count ( templates.* )  from templates  where  templates.Template_Type_Code = \"CV\" "}, {"NatSQL": "select templates.Version_Number , templates.Template_Type_Code where templates.Version_Number > 5", "sql": "select templates.Version_Number , templates.Template_Type_Code from templates  where  templates.Version_Number > 5 "}, {"NatSQL": "select templates.Version_Number , templates.Template_Type_Code where templates.Version_Number > 5", "sql": "select templates.Version_Number , templates.Template_Type_Code from templates  where  templates.Version_Number > 5 "}, {"NatSQL": "select templates.Template_Type_Code , count ( templates.* ) group by templates.Template_Type_Code", "sql": "select templates.Template_Type_Code , count ( templates.* )  from templates  group by templates.Template_Type_Code "}, {"NatSQL": "select templates.Template_Type_Code , count ( templates.* ) group by templates.Template_Type_Code", "sql": "select templates.Template_Type_Code , count ( templates.* )  from templates  group by templates.Template_Type_Code "}, {"NatSQL": "select templates.Template_Type_Code group by templates.Template_Type_Code order by count ( templates.* ) desc limit 1", "sql": "select templates.Template_Type_Code from templates  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1"}, {"NatSQL": "select templates.Template_Type_Code group by templates.Template_Type_Code order by count ( templates.* ) desc limit 1", "sql": "select templates.Template_Type_Code from templates  group by templates.Template_Type_Code  order by count ( templates.* )  desc limit 1"}, {"NatSQL": "select templates.Template_Type_Code where count ( templates.* ) < 3 group by templates.Template_Type_Code", "sql": "select templates.Template_Type_Code from templates  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "}, {"NatSQL": "select templates.Template_Type_Code where count ( templates.* ) < 3 group by templates.Template_Type_Code", "sql": "select templates.Template_Type_Code from templates  where  count ( templates.* )  < 3  group by templates.Template_Type_Code "}, {"NatSQL": "select min(templates.Version_Number) , templates.Template_Type_Code", "sql": "select min(templates.Version_Number) , templates.Template_Type_Code from templates"}, {"NatSQL": "select min(templates.Version_Number) , templates.Template_Type_Code", "sql": "select min(templates.Version_Number) , templates.Template_Type_Code from templates"}, {"NatSQL": "select templates.Template_Type_Code where documents.Document_Name = \"Data base\"", "sql": "select templates.Template_Type_Code from templates  where  documents.Document_Name = \"Data base\" "}, {"NatSQL": "select templates.Template_Type_Code where documents.Document_Name = \"Data base\"", "sql": "select templates.Template_Type_Code from templates  where  documents.Document_Name = \"Data base\" "}, {"NatSQL": "select documents.Document_Name where templates.Template_Type_Code = \"BK\"", "sql": "select documents.Document_Name from templates  where  templates.Template_Type_Code = \"BK\" "}, {"NatSQL": "select documents.Document_Name where templates.Template_Type_Code = \"BK\"", "sql": "select documents.Document_Name from templates  where  templates.Template_Type_Code = \"BK\" "}, {"NatSQL": "select templates.Template_Type_Code , count ( documents.* ) group by templates.Template_Type_Code", "sql": "select templates.Template_Type_Code , count ( documents.* )  from documents  group by templates.Template_Type_Code "}, {"NatSQL": "select templates.Template_Type_Code , count ( documents.* ) group by templates.Template_Type_Code", "sql": "select templates.Template_Type_Code , count ( documents.* )  from documents  group by templates.Template_Type_Code "}, {"NatSQL": "select templates.Template_Type_Code group by templates.Template_Type_Code order by count ( documents.* ) desc limit 1", "sql": "select templates.Template_Type_Code from documents  group by templates.Template_Type_Code  order by count ( documents.* )  desc limit 1"}, {"NatSQL": "select templates.Template_Type_Code group by templates.Template_Type_Code order by count ( documents.* ) desc limit 1", "sql": "select templates.Template_Type_Code from documents  group by templates.Template_Type_Code  order by count ( documents.* )  desc limit 1"}, {"NatSQL": "select templates.Template_Type_Code where except_ @.@ is documents.*", "sql": "select templates.Template_Type_Code from templates  where  except_  @.@ is documents.* "}, {"NatSQL": "select templates.Template_Type_Code where except_ @.@ is documents.*", "sql": "select templates.Template_Type_Code from templates  where  except_  @.@ is documents.* "}, {"NatSQL": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description", "sql": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description from ref_template_types "}, {"NatSQL": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description", "sql": "select ref_template_types.Template_Type_Code , ref_template_types.Template_Type_Description from ref_template_types "}, {"NatSQL": "select ref_template_types.Template_Type_Description where ref_template_types.Template_Type_Code = \"AD\"", "sql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\" "}, {"NatSQL": "select ref_template_types.Template_Type_Description where ref_template_types.Template_Type_Code = \"AD\"", "sql": "select ref_template_types.Template_Type_Description from ref_template_types  where  ref_template_types.Template_Type_Code = \"AD\" "}, {"NatSQL": "select ref_template_types.Template_Type_Code where ref_template_types.Template_Type_Description = \"Book\"", "sql": "select ref_template_types.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\" "}, {"NatSQL": "select ref_template_types.Template_Type_Code where ref_template_types.Template_Type_Description = \"Book\"", "sql": "select ref_template_types.Template_Type_Code from ref_template_types  where  ref_template_types.Template_Type_Description = \"Book\" "}, {"NatSQL": "select distinct ref_template_types.Template_Type_Description where @.@ join documents.*", "sql": "select  distinct ref_template_types.Template_Type_Description from ref_template_types  where  @.@ join documents.* "}, {"NatSQL": "select distinct ref_template_types.Template_Type_Description where @.@ join documents.*", "sql": "select  distinct ref_template_types.Template_Type_Description from ref_template_types  where  @.@ join documents.* "}, {"NatSQL": "select templates.Template_ID where ref_template_types.Template_Type_Description = \"Presentation\"", "sql": "select templates.Template_ID from ref_template_types  where  ref_template_types.Template_Type_Description = \"Presentation\" "}, {"NatSQL": "select templates.Template_ID where ref_template_types.Template_Type_Description = \"Presentation\"", "sql": "select templates.Template_ID from templates  where  ref_template_types.Template_Type_Description = \"Presentation\" "}, {"NatSQL": "select count ( paragraphs.* )", "sql": "select count ( paragraphs.* )  from paragraphs "}, {"NatSQL": "select count ( paragraphs.* )", "sql": "select count ( paragraphs.* )  from paragraphs "}, {"NatSQL": "select count ( paragraphs.* ) where documents.Document_Name = \"Summer Show\"", "sql": "select count ( paragraphs.* )  from paragraphs  where  documents.Document_Name = \"Summer Show\" "}, {"NatSQL": "select count ( paragraphs.* ) where documents.Document_Name = \"Summer Show\"", "sql": "select count ( paragraphs.* )  from paragraphs  where  documents.Document_Name = \"Summer Show\" "}, {"NatSQL": "select paragraphs.Other_Details where paragraphs.Paragraph_Text like \"Korea\"", "sql": "select paragraphs.Other_Details from paragraphs  where  paragraphs.Paragraph_Text like \"Korea\" "}, {"NatSQL": "select paragraphs.Other_Details where paragraphs.Paragraph_Text like \"Korea\"", "sql": "select paragraphs.Other_Details from paragraphs  where  paragraphs.Paragraph_Text like \"Korea\" "}, {"NatSQL": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text where documents.Document_Name = \"Welcome to NY\"", "sql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from paragraphs  where  documents.Document_Name = \"Welcome to NY\" "}, {"NatSQL": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text where documents.Document_Name = \"Welcome to NY\"", "sql": "select paragraphs.Paragraph_ID , paragraphs.Paragraph_Text from paragraphs  where  documents.Document_Name = \"Welcome to NY\" "}, {"NatSQL": "select paragraphs.Paragraph_Text where documents.Document_Name = \"Customer reviews\"", "sql": "select paragraphs.Paragraph_Text from paragraphs  where  documents.Document_Name = \"Customer reviews\" "}, {"NatSQL": "select paragraphs.Paragraph_Text where documents.Document_Name = \"Customer reviews\"", "sql": "select paragraphs.Paragraph_Text from paragraphs  where  documents.Document_Name = \"Customer reviews\" "}, {"NatSQL": "select paragraphs.Document_ID , count ( paragraphs.* ) group by paragraphs.Document_ID order by paragraphs.Document_ID asc", "sql": "select paragraphs.Document_ID , count ( paragraphs.* )  from paragraphs  group by paragraphs.Document_ID  order by paragraphs.Document_ID asc"}, {"NatSQL": "select paragraphs.Document_ID , count ( paragraphs.* ) group by paragraphs.Document_ID order by paragraphs.Document_ID asc", "sql": "select paragraphs.Document_ID , count ( paragraphs.* )  from paragraphs  group by paragraphs.Document_ID  order by paragraphs.Document_ID asc"}, {"NatSQL": "select paragraphs.Document_ID , documents.Document_Name , count ( paragraphs.* ) group by paragraphs.Document_ID", "sql": "select paragraphs.Document_ID , documents.Document_Name , count ( paragraphs.* )  from paragraphs  group by paragraphs.Document_ID "}, {"NatSQL": "select paragraphs.Document_ID , documents.Document_Name , count ( paragraphs.* ) group by paragraphs.Document_ID", "sql": "select paragraphs.Document_ID , documents.Document_Name , count ( paragraphs.* )  from paragraphs  group by paragraphs.Document_ID "}, {"NatSQL": "select paragraphs.Document_ID where count ( paragraphs.* ) >= 2 group by paragraphs.Document_ID", "sql": "select paragraphs.Document_ID from paragraphs  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "}, {"NatSQL": "select paragraphs.Document_ID where count ( paragraphs.* ) >= 2 group by paragraphs.Document_ID", "sql": "select paragraphs.Document_ID from paragraphs  where  count ( paragraphs.* )  >= 2  group by paragraphs.Document_ID "}, {"NatSQL": "select documents.Document_ID , documents.Document_Name group by paragraphs.Document_ID order by count ( paragraphs.* ) desc limit 1", "sql": "select documents.Document_ID , documents.Document_Name from paragraphs  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"}, {"NatSQL": "select documents.Document_ID , documents.Document_Name group by paragraphs.Document_ID order by count ( paragraphs.* ) desc limit 1", "sql": "select documents.Document_ID , documents.Document_Name from paragraphs  group by paragraphs.Document_ID  order by count ( paragraphs.* )  desc limit 1"}, {"NatSQL": "select paragraphs.Document_ID group by paragraphs.Document_ID order by count ( paragraphs.* ) asc limit 1", "sql": "select paragraphs.Document_ID from paragraphs  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"}, {"NatSQL": "select paragraphs.Document_ID group by paragraphs.Document_ID order by count ( paragraphs.* ) asc limit 1", "sql": "select paragraphs.Document_ID from paragraphs  group by paragraphs.Document_ID  order by count ( paragraphs.* )  asc limit 1"}, {"NatSQL": "select paragraphs.Document_ID where count ( paragraphs.* ) between 1 and 2 group by paragraphs.Document_ID", "sql": "select paragraphs.Document_ID from paragraphs  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "}, {"NatSQL": "select paragraphs.Document_ID where count ( paragraphs.* ) between 1 and 2 group by paragraphs.Document_ID", "sql": "select paragraphs.Document_ID from paragraphs  where  count ( paragraphs.* )  between 1 and 2  group by paragraphs.Document_ID "}, {"NatSQL": "select paragraphs.Document_ID where paragraphs.Paragraph_Text = \"Brazil\" and paragraphs.Paragraph_Text = \"Ireland\"", "sql": "select paragraphs.Document_ID from paragraphs  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "}, {"NatSQL": "select paragraphs.Document_ID where paragraphs.Paragraph_Text = \"Brazil\" and paragraphs.Paragraph_Text = \"Ireland\"", "sql": "select paragraphs.Document_ID from paragraphs  where  paragraphs.Paragraph_Text = \"Brazil\"  and  paragraphs.Paragraph_Text = \"Ireland\" "}, {"NatSQL": "select count ( teacher.* )", "sql": "select count ( teacher.* )  from teacher "}, {"NatSQL": "select count ( teacher.* )", "sql": "select count ( teacher.* )  from teacher "}, {"NatSQL": "select teacher.Name order by teacher.Age asc", "sql": "select teacher.Name from teacher  order by teacher.Age asc"}, {"NatSQL": "select teacher.Name order by teacher.Age asc", "sql": "select teacher.Name from teacher  order by teacher.Age asc"}, {"NatSQL": "select teacher.Age , teacher.Hometown", "sql": "select teacher.Age , teacher.Hometown from teacher "}, {"NatSQL": "select teacher.Age , teacher.Hometown", "sql": "select teacher.Age , teacher.Hometown from teacher "}, {"NatSQL": "select teacher.Name where teacher.Hometown != \"little lever urban district\"", "sql": "select teacher.Name from teacher  where  teacher.Hometown != \"little lever urban district\" "}, {"NatSQL": "select teacher.Name where teacher.Hometown != \"little lever urban district\"", "sql": "select teacher.Name from teacher  where  teacher.Hometown != \"little lever urban district\" "}, {"NatSQL": "select teacher.Name where teacher.Age = 32 or teacher.Age = 33", "sql": "select teacher.Name from teacher  where  teacher.Age = 32  or  teacher.Age = 33 "}, {"NatSQL": "select teacher.Name where teacher.Age = 32 or teacher.Age = 33", "sql": "select teacher.Name from teacher  where  teacher.Age = 32  or  teacher.Age = 33 "}, {"NatSQL": "select teacher.Hometown order by teacher.Age asc limit 1", "sql": "select teacher.Hometown from teacher  order by teacher.Age asc limit 1"}, {"NatSQL": "select teacher.Hometown order by teacher.Age asc limit 1", "sql": "select teacher.Hometown from teacher  order by teacher.Age asc limit 1"}, {"NatSQL": "select teacher.Hometown , count ( teacher.* ) group by teacher.Hometown", "sql": "select teacher.Hometown , count ( teacher.* )  from teacher  group by teacher.Hometown "}, {"NatSQL": "select teacher.Hometown , count ( teacher.* ) group by teacher.Hometown", "sql": "select teacher.Hometown , count ( teacher.* )  from teacher  group by teacher.Hometown "}, {"NatSQL": "select teacher.Hometown group by teacher.Hometown order by count ( teacher.* ) desc limit 1", "sql": "select teacher.Hometown from teacher  group by teacher.Hometown  order by count ( teacher.* )  desc limit 1"}, {"NatSQL": "select teacher.Hometown group by teacher.Hometown order by count ( teacher.* ) desc limit 1", "sql": "select teacher.Hometown from teacher  group by teacher.Hometown  order by count ( teacher.* )  desc limit 1"}, {"NatSQL": "select teacher.Hometown where count ( teacher.* ) >= 2 group by teacher.Hometown", "sql": "select teacher.Hometown from teacher  where  count ( teacher.* )  >= 2  group by teacher.Hometown "}, {"NatSQL": "select teacher.Hometown where count ( teacher.* ) >= 2 group by teacher.Hometown", "sql": "select teacher.Hometown from teacher  where  count ( teacher.* )  >= 2  group by teacher.Hometown "}, {"NatSQL": "select teacher.Name , course.Course", "sql": "select teacher.Name , course.Course from teacher "}, {"NatSQL": "select teacher.Name , course.Course", "sql": "select teacher.Name , course.Course from teacher "}, {"NatSQL": "select teacher.Name , course.Course order by teacher.Name asc", "sql": "select teacher.Name , course.Course from course_arrange  order by teacher.Name asc"}, {"NatSQL": "select teacher.Name , course.Course order by teacher.Name asc", "sql": "select teacher.Name , course.Course from course_arrange  order by teacher.Name asc"}, {"NatSQL": "select teacher.Name where course.Course = \"Math\"", "sql": "select teacher.Name from course_arrange  where  course.Course = \"Math\" "}, {"NatSQL": "select teacher.Name where course.Course = \"Math\"", "sql": "select teacher.Name from course_arrange  where  course.Course = \"Math\" "}, {"NatSQL": "select teacher.Name , count ( course_arrange.* ) group by teacher.Name", "sql": "select teacher.Name , count ( course_arrange.* )  from course_arrange  group by teacher.Name "}, {"NatSQL": "select teacher.Name , count ( course_arrange.* ) group by teacher.Name", "sql": "select teacher.Name , count ( course_arrange.* )  from course_arrange  group by teacher.Name "}, {"NatSQL": "select teacher.Name where count ( course_arrange.* ) >= 2 group by teacher.Name", "sql": "select teacher.Name from course_arrange  where  count ( course_arrange.* )  >= 2  group by teacher.Name "}, {"NatSQL": "select teacher.Name where count ( course_arrange.* ) >= 2 group by teacher.Name", "sql": "select teacher.Name from course_arrange  where  count ( course_arrange.* )  >= 2  group by teacher.Name "}, {"NatSQL": "select teacher.Name where @.@ not in course_arrange.*", "sql": "select teacher.Name from teacher  where  @.@ not in course_arrange.* "}, {"NatSQL": "select teacher.Name where @.@ not in course_arrange.*", "sql": "select teacher.Name from teacher  where  @.@ not in course_arrange.* "}, {"NatSQL": "select count ( visitor.* ) where visitor.Age < 30", "sql": "select count ( visitor.* )  from visitor  where  visitor.Age < 30 "}, {"NatSQL": "select visitor.Name where visitor.Level_of_membership > 4 order by visitor.Level_of_membership desc", "sql": "select visitor.Name from visitor  where  visitor.Level_of_membership > 4  order by visitor.Level_of_membership desc"}, {"NatSQL": "select avg ( visitor.Age ) where visitor.Level_of_membership <= 4", "sql": "select avg ( visitor.Age )  from visitor  where  visitor.Level_of_membership <= 4 "}, {"NatSQL": "select visitor.Name , visitor.Level_of_membership where visitor.Level_of_membership > 4 order by visitor.Age desc", "sql": "select visitor.Name , visitor.Level_of_membership from visitor  where  visitor.Level_of_membership > 4  order by visitor.Age desc"}, {"NatSQL": "select museum.Museum_ID , museum.Name order by museum.Num_of_Staff desc limit 1", "sql": "select museum.Museum_ID , museum.Name from museum  order by museum.Num_of_Staff desc limit 1"}, {"NatSQL": "select avg ( museum.Num_of_Staff ) where museum.Open_Year < 2009", "sql": "select avg ( museum.Num_of_Staff )  from museum  where  museum.Open_Year < 2009 "}, {"NatSQL": "select museum.Num_of_Staff , museum.Open_Year where museum.Name = \"Plaza Museum\"", "sql": "select museum.Num_of_Staff , museum.Open_Year from museum  where  museum.Name = \"Plaza Museum\" "}, {"NatSQL": "select museum.Name where @.@ > min ( museum.Num_of_Staff ) and museum.Open_Year > 2010", "sql": "select museum.Name from museum  where  @.@ > min ( museum.Num_of_Staff )   and  museum.Open_Year > 2010 "}, {"NatSQL": "select visitor.ID , visitor.Name , visitor.Age where count ( visit.* ) > 1 group by visitor.ID", "sql": "select visitor.ID , visitor.Name , visitor.Age from visit  where  count ( visit.* )  > 1  group by visitor.ID "}, {"NatSQL": "select visit.visitor_id , visitor.Name , visitor.Level_of_membership group by visit.visitor_ID order by sum ( visit.Total_spent ) desc limit 1", "sql": "select visit.visitor_id , visitor.Name , visitor.Level_of_membership from visitor  group by visit.visitor_ID  order by sum ( visit.Total_spent )  desc limit 1"}, {"NatSQL": "select museum.Museum_ID , museum.Name group by visit.Museum_ID order by count ( visit.* ) desc limit 1", "sql": "select museum.Museum_ID , museum.Name from visit  group by visit.Museum_ID  order by count ( visit.* )  desc limit 1"}, {"NatSQL": "select museum.Name where @.@ not in visit.*", "sql": "select museum.Name from museum  where  @.@ not in visit.* "}, {"NatSQL": "select visitor.Name , visitor.Age order by visit.Num_of_Ticket desc limit 1", "sql": "select visitor.Name , visitor.Age from visitor  order by visit.Num_of_Ticket desc limit 1"}, {"NatSQL": "select avg ( visit.Num_of_Ticket ) , max ( visit.Num_of_Ticket )", "sql": "select avg ( visit.Num_of_Ticket )  , max ( visit.Num_of_Ticket )  from visit "}, {"NatSQL": "select sum ( visit.Total_spent ) where visitor.Level_of_membership = 1", "sql": "select sum ( visit.Total_spent )  from visitor  where  visitor.Level_of_membership = 1 "}, {"NatSQL": "select visitor.Name where museum.Open_Year < 2009 and museum.Open_Year > 2011", "sql": "select visitor.Name from visitor  where  museum.Open_Year < 2009  and  museum.Open_Year > 2011 "}, {"NatSQL": "select count ( visitor.* ) where @.@ not in visit.* and museum.Open_Year > 2010", "sql": "select count ( visitor.* )  from visitor  where  @.@ not in visit.*  and  museum.Open_Year > 2010 "}, {"NatSQL": "select count ( museum.* ) where museum.Open_Year > 2013 or museum.Open_Year < 2008", "sql": "select count ( museum.* )  from museum  where  museum.Open_Year > 2013  or  museum.Open_Year < 2008 "}, {"NatSQL": "select count ( players.* )", "sql": "select count ( players.* )  from players "}, {"NatSQL": "select count ( players.* )", "sql": "select count ( players.* )  from players "}, {"NatSQL": "select count ( matches.* )", "sql": "select count ( matches.* )  from matches "}, {"NatSQL": "select count ( matches.* )", "sql": "select count ( matches.* )  from matches "}, {"NatSQL": "select players.first_name , players.birth_date where players.country_code = \"USA\"", "sql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\" "}, {"NatSQL": "select players.first_name , players.birth_date where players.country_code = \"USA\"", "sql": "select players.first_name , players.birth_date from players  where  players.country_code = \"USA\" "}, {"NatSQL": "select avg ( matches.loser_age ) , avg ( matches.winner_age )", "sql": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from matches "}, {"NatSQL": "select avg ( matches.loser_age ) , avg ( matches.winner_age )", "sql": "select avg ( matches.loser_age )  , avg ( matches.winner_age )  from matches "}, {"NatSQL": "select avg ( matches.winner_rank )", "sql": "select avg ( matches.winner_rank )  from matches "}, {"NatSQL": "select avg ( matches.winner_rank )", "sql": "select avg ( matches.winner_rank )  from matches "}, {"NatSQL": "select min ( matches.loser_rank )", "sql": "select min ( matches.loser_rank )  from matches "}, {"NatSQL": "select min ( matches.loser_rank )", "sql": "select min ( matches.loser_rank )  from matches "}, {"NatSQL": "select count ( distinct players.country_code )", "sql": "select count (  distinct players.country_code )  from players "}, {"NatSQL": "select count ( distinct players.country_code )", "sql": "select count (  distinct players.country_code )  from players "}, {"NatSQL": "select count ( distinct matches.loser_name )", "sql": "select count (  distinct matches.loser_name )  from matches "}, {"NatSQL": "select count ( distinct matches.loser_name )", "sql": "select count (  distinct matches.loser_name )  from matches "}, {"NatSQL": "select matches.tourney_name where count ( matches.* ) > 10 group by matches.tourney_name", "sql": "select matches.tourney_name from matches  where  count ( matches.* )  > 10  group by matches.tourney_name "}, {"NatSQL": "select matches.tourney_name where count ( matches.* ) > 10 group by matches.tourney_name", "sql": "select matches.tourney_name from matches  where  count ( matches.* )  > 10  group by matches.tourney_name "}, {"NatSQL": "select matches.winner_name where matches.year = 2013 and matches.year = 2016", "sql": "select matches.winner_name from matches  where  matches.year = 2013  and  matches.year = 2016 "}, {"NatSQL": "select matches.winner_name where matches.year = 2013 and matches.year = 2016", "sql": "select matches.winner_name from matches  where  matches.year = 2013  and  matches.year = 2016 "}, {"NatSQL": "select count ( matches.* ) where matches.year = 2013 or matches.year = 2016", "sql": "select count ( matches.* )  from matches  where  matches.year = 2013  or  matches.year = 2016 "}, {"NatSQL": "select count ( matches.* ) where matches.year = 2013 or matches.year = 2016", "sql": "select count ( matches.* )  from matches  where  matches.year = 2013  or  matches.year = 2016 "}, {"NatSQL": "select players.country_code , players.first_name where matches.tourney_name = \"WTA Championships\" and matches.tourney_name = \"Australian Open\"", "sql": "select players.country_code , players.first_name from players  where  matches.tourney_name = \"WTA Championships\"  and  matches.tourney_name = \"Australian Open\" "}, {"NatSQL": "select players.country_code , players.first_name where matches.tourney_name = \"WTA Championships\" and matches.tourney_name = \"Australian Open\"", "sql": "select players.country_code , players.first_name from players  where  matches.tourney_name = \"WTA Championships\"  and  matches.tourney_name = \"Australian Open\" "}, {"NatSQL": "select players.first_name , players.country_code order by players.birth_date asc limit 1", "sql": "select players.first_name , players.country_code from players  order by players.birth_date asc limit 1"}, {"NatSQL": "select players.first_name , players.country_code order by players.birth_date asc limit 1", "sql": "select players.first_name , players.country_code from players  order by players.birth_date asc limit 1"}, {"NatSQL": "select players.first_name , players.last_name order by players.birth_date asc", "sql": "select players.first_name , players.last_name from players  order by players.birth_date asc"}, {"NatSQL": "select players.first_name , players.last_name order by players.birth_date asc", "sql": "select players.first_name , players.last_name from players  order by players.birth_date asc"}, {"NatSQL": "select players.first_name , players.last_name where players.hand = \"L\" order by players.birth_date asc", "sql": "select players.first_name , players.last_name from players  where  players.hand = \"L\"  order by players.birth_date asc"}, {"NatSQL": "select players.first_name , players.last_name where players.hand = \"L\" order by players.birth_date asc", "sql": "select players.first_name , players.last_name from players  where  players.hand = \"L\"  order by players.birth_date asc"}, {"NatSQL": "select players.country_code , players.first_name order by rankings.tours desc limit 1", "sql": "select players.country_code , players.first_name from players  order by rankings.tours desc limit 1"}, {"NatSQL": "select players.country_code , players.first_name order by rankings.tours desc limit 1", "sql": "select players.country_code , players.first_name from players  order by rankings.tours desc limit 1"}, {"NatSQL": "select matches.year group by matches.year order by count ( matches.* ) desc limit 1", "sql": "select matches.year from matches  group by matches.year  order by count ( matches.* )  desc limit 1"}, {"NatSQL": "select matches.year group by matches.year order by count ( matches.* ) desc limit 1", "sql": "select matches.year from matches  group by matches.year  order by count ( matches.* )  desc limit 1"}, {"NatSQL": "select matches.winner_name , matches.winner_rank_points group by matches.winner_name order by count ( matches.* ) desc limit 1", "sql": "select matches.winner_name , matches.winner_rank_points from matches  group by matches.winner_name  order by count ( matches.* )  desc limit 1"}, {"NatSQL": "select matches.winner_name , matches.winner_rank_points group by matches.winner_name order by count ( matches.* ) desc limit 1", "sql": "select matches.winner_name , matches.winner_rank_points from matches  group by matches.winner_name  order by count ( matches.* )  desc limit 1"}, {"NatSQL": "select matches.winner_name where matches.tourney_name = \"Australian Open\" order by matches.winner_rank_points desc limit 1", "sql": "select matches.winner_name from matches  where  matches.tourney_name = \"Australian Open\"  order by matches.winner_rank_points desc limit 1"}, {"NatSQL": "select matches.winner_name where matches.tourney_name = \"Australian Open\" order by matches.winner_rank_points desc limit 1", "sql": "select matches.winner_name from matches  where  matches.tourney_name = \"Australian Open\"  order by matches.winner_rank_points desc limit 1"}, {"NatSQL": "select matches.winner_name , matches.loser_name order by matches.minutes desc limit 1", "sql": "select matches.winner_name , matches.loser_name from matches  order by matches.minutes desc limit 1"}, {"NatSQL": "select matches.winner_name , matches.loser_name order by matches.minutes desc limit 1", "sql": "select matches.winner_name , matches.loser_name from matches  order by matches.minutes desc limit 1"}, {"NatSQL": "select avg ( rankings.ranking ) , players.first_name group by players.first_name", "sql": "select avg ( rankings.ranking )  , players.first_name from players  group by players.first_name "}, {"NatSQL": "select avg ( rankings.ranking ) , players.first_name group by players.first_name", "sql": "select avg ( rankings.ranking )  , players.first_name from players  group by players.first_name "}, {"NatSQL": "select sum ( rankings.ranking_points ) , players.first_name group by players.first_name", "sql": "select sum ( rankings.ranking_points )  , players.first_name from players  group by players.first_name "}, {"NatSQL": "select sum ( rankings.ranking_points ) , players.first_name group by players.first_name", "sql": "select sum ( rankings.ranking_points )  , players.first_name from players  group by players.first_name "}, {"NatSQL": "select count ( players.* ) , players.country_code group by players.country_code", "sql": "select count ( players.* )  , players.country_code from players  group by players.country_code "}, {"NatSQL": "select count ( players.* ) , players.country_code group by players.country_code", "sql": "select count ( players.* )  , players.country_code from players  group by players.country_code "}, {"NatSQL": "select players.country_code group by players.country_code order by count ( players.* ) desc limit 1", "sql": "select players.country_code from players  group by players.country_code  order by count ( players.* )  desc limit 1"}, {"NatSQL": "select players.country_code group by players.country_code order by count ( players.* ) desc limit 1", "sql": "select players.country_code from players  group by players.country_code  order by count ( players.* )  desc limit 1"}, {"NatSQL": "select players.country_code where count ( players.* ) > 50 group by players.country_code", "sql": "select players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "}, {"NatSQL": "select players.country_code where count ( players.* ) > 50 group by players.country_code", "sql": "select players.country_code from players  where  count ( players.* )  > 50  group by players.country_code "}, {"NatSQL": "select sum ( rankings.tours ) , rankings.ranking_date group by rankings.ranking_date", "sql": "select sum ( rankings.tours )  , rankings.ranking_date from rankings  group by rankings.ranking_date "}, {"NatSQL": "select sum ( rankings.tours ) , rankings.ranking_date group by rankings.ranking_date", "sql": "select sum ( rankings.tours )  , rankings.ranking_date from rankings  group by rankings.ranking_date "}, {"NatSQL": "select count ( matches.* ) , matches.year group by matches.year", "sql": "select count ( matches.* )  , matches.year from matches  group by matches.year "}, {"NatSQL": "select count ( matches.* ) , matches.year group by matches.year", "sql": "select count ( matches.* )  , matches.year from matches  group by matches.year "}, {"NatSQL": "select distinct matches.winner_name , matches.winner_rank order by matches.winner_age asc limit 3", "sql": "select  distinct matches.winner_name , matches.winner_rank from matches  order by matches.winner_age asc limit 3"}, {"NatSQL": "select distinct matches.winner_name , matches.winner_rank order by matches.winner_age asc limit 3", "sql": "select  distinct matches.winner_name , matches.winner_rank from matches  order by matches.winner_age asc limit 3"}, {"NatSQL": "select count ( distinct matches.winner_name ) where matches.tourney_name = \"WTA Championships\" and matches.winner_hand = \"L\"", "sql": "select count (  distinct matches.winner_name )  from matches  where  matches.tourney_name = \"WTA Championships\"  and  matches.winner_hand = \"L\" "}, {"NatSQL": "select count ( distinct matches.winner_name ) where matches.tourney_name = \"WTA Championships\" and matches.winner_hand = \"L\"", "sql": "select count (  distinct matches.winner_name )  from matches  where  matches.tourney_name = \"WTA Championships\"  and  matches.winner_hand = \"L\" "}, {"NatSQL": "select players.first_name , players.country_code , players.birth_date order by matches.winner_rank_points desc limit 1", "sql": "select players.first_name , players.country_code , players.birth_date from matches  order by matches.winner_rank_points desc limit 1"}, {"NatSQL": "select players.first_name , players.country_code , players.birth_date order by matches.winner_rank_points desc limit 1", "sql": "select players.first_name , players.country_code , players.birth_date from players  order by matches.winner_rank_points desc limit 1"}, {"NatSQL": "select count ( players.* ) , players.hand group by players.hand", "sql": "select count ( players.* )  , players.hand from players  group by players.hand "}, {"NatSQL": "select count ( players.* ) , players.hand group by players.hand", "sql": "select count ( players.* )  , players.hand from players  group by players.hand "}, {"NatSQL": "select count ( ship.* ) where ship.disposition_of_ship = \"Captured\"", "sql": "select count ( ship.* )  from ship  where  ship.disposition_of_ship = \"Captured\" "}, {"NatSQL": "select ship.name , ship.tonnage order by ship.name desc", "sql": "select ship.name , ship.tonnage from ship  order by ship.name desc"}, {"NatSQL": "select battle.name , battle.date", "sql": "select battle.name , battle.date from battle "}, {"NatSQL": "select max ( death.killed ) , min ( death.killed )", "sql": "select max ( death.killed )  , min ( death.killed )  from death "}, {"NatSQL": "select avg ( death.injured )", "sql": "select avg ( death.injured )  from death "}, {"NatSQL": "select death.killed , death.injured where ship.tonnage = \"t\"", "sql": "select death.killed , death.injured from ship  where  ship.tonnage = \"t\" "}, {"NatSQL": "select battle.name , battle.result where battle.bulgarian_commander != \"Boril\"", "sql": "select battle.name , battle.result from battle  where  battle.bulgarian_commander != \"Boril\" "}, {"NatSQL": "select distinct battle.id , battle.name where ship.ship_type = \"Brig\"", "sql": "select  distinct battle.id , battle.name from battle  where  ship.ship_type = \"Brig\" "}, {"NatSQL": "select battle.id , battle.name where sum ( death.killed ) > 10 group by battle.id", "sql": "select battle.id , battle.name from battle  where  sum ( death.killed )  > 10  group by battle.id "}, {"NatSQL": "select ship.id , ship.name group by ship.id order by count ( death.* ) desc limit 1", "sql": "select ship.id , ship.name from death  group by ship.id  order by count ( death.* )  desc limit 1"}, {"NatSQL": "select battle.name where battle.bulgarian_commander = \"Kaloyan\" and battle.latin_commander = \"Baldwin I\"", "sql": "select battle.name from battle  where  battle.bulgarian_commander = \"Kaloyan\"  and  battle.latin_commander = \"Baldwin I\" "}, {"NatSQL": "select count ( distinct battle.result )", "sql": "select count (  distinct battle.result )  from battle "}, {"NatSQL": "select count ( battle.* ) where @.@ not in ship.* and ship.tonnage = \"225\"", "sql": "select count ( battle.* )  from battle  where  @.@ not in ship.*  and  ship.tonnage = \"225\" "}, {"NatSQL": "select battle.name , battle.date where ship.name = \"Lettice\" and ship.name = \"HMS Atalanta\"", "sql": "select battle.name , battle.date from battle  where  ship.name = \"Lettice\"  and  ship.name = \"HMS Atalanta\" "}, {"NatSQL": "select battle.name , battle.result , battle.bulgarian_commander where except_ @.@ is ship.* and ship.location = \"English Channel\"", "sql": "select battle.name , battle.result , battle.bulgarian_commander from battle  where  except_  @.@ is ship.*  and  ship.location = \"English Channel\" "}, {"NatSQL": "select death.note where death.note like \"%East%\"", "sql": "select death.note from death  where  death.note like \"%East%\" "}, {"NatSQL": "select addresses.line_1 , addresses.line_2", "sql": "select addresses.line_1 , addresses.line_2 from addresses "}, {"NatSQL": "select addresses.line_1 , addresses.line_2", "sql": "select addresses.line_1 , addresses.line_2 from addresses "}, {"NatSQL": "select count ( courses.* )", "sql": "select count ( courses.* )  from courses "}, {"NatSQL": "select count ( courses.* )", "sql": "select count ( courses.* )  from courses "}, {"NatSQL": "select courses.course_description where courses.course_name = \"math\"", "sql": "select courses.course_description from courses  where  courses.course_name = \"math\" "}, {"NatSQL": "select courses.course_description where courses.course_name = \"math\"", "sql": "select courses.course_description from courses  where  courses.course_name = \"math\" "}, {"NatSQL": "select addresses.zip_postcode where addresses.city = \"Port Chelsea\"", "sql": "select addresses.zip_postcode from addresses  where  addresses.city = \"Port Chelsea\" "}, {"NatSQL": "select addresses.zip_postcode where addresses.city = \"Port Chelsea\"", "sql": "select addresses.zip_postcode from addresses  where  addresses.city = \"Port Chelsea\" "}, {"NatSQL": "select departments.department_name , departments.department_id group by degree_programs.department_id order by count ( degree_programs.* ) desc limit 1", "sql": "select departments.department_name , departments.department_id from degree_programs  group by degree_programs.department_id  order by count ( degree_programs.* )  desc limit 1"}, {"NatSQL": "select departments.department_name , departments.department_id group by degree_programs.department_id order by count ( degree_programs.* ) desc limit 1", "sql": "select departments.department_name , departments.department_id from degree_programs  group by degree_programs.department_id  order by count ( degree_programs.* )  desc limit 1"}, {"NatSQL": "select count ( distinct degree_programs.department_id )", "sql": "select count (  distinct degree_programs.department_id )  from degree_programs "}, {"NatSQL": "select count ( distinct degree_programs.department_id )", "sql": "select count (  distinct degree_programs.department_id )  from degree_programs "}, {"NatSQL": "select count ( distinct degree_programs.degree_summary_name )", "sql": "select count (  distinct degree_programs.degree_summary_name )  from degree_programs "}, {"NatSQL": "select count ( distinct degree_programs.degree_summary_name )", "sql": "select count (  distinct degree_programs.degree_summary_name )  from degree_programs "}, {"NatSQL": "select count ( degree_programs.* ) where departments.department_name = \"engineer\"", "sql": "select count ( degree_programs.* )  from degree_programs  where  departments.department_name = \"engineer\" "}, {"NatSQL": "select count ( degree_programs.* ) where departments.department_name = \"engineer\"", "sql": "select count ( degree_programs.* )  from degree_programs  where  departments.department_name = \"engineer\" "}, {"NatSQL": "select sections.section_name , sections.section_description", "sql": "select sections.section_name , sections.section_description from sections "}, {"NatSQL": "select sections.section_name , sections.section_description", "sql": "select sections.section_name , sections.section_description from sections "}, {"NatSQL": "select courses.course_name , courses.course_id where count ( sections.* ) <= 2 group by courses.course_id", "sql": "select courses.course_name , courses.course_id from sections  where  count ( sections.* )  <= 2  group by courses.course_id "}, {"NatSQL": "select courses.course_name , courses.course_id where count ( sections.* ) <= 2 group by courses.course_id", "sql": "select courses.course_name , courses.course_id from sections  where  count ( sections.* )  <= 2  group by courses.course_id "}, {"NatSQL": "select sections.section_name order by sections.section_name desc", "sql": "select sections.section_name from sections  order by sections.section_name desc"}, {"NatSQL": "select sections.section_name order by sections.section_name desc", "sql": "select sections.section_name from sections  order by sections.section_name desc"}, {"NatSQL": "select semesters.semester_name , semesters.semester_id where @.@ join student_enrolment.* group by semesters.semester_id order by count ( semesters.* ) desc limit 1", "sql": "select semesters.semester_name , semesters.semester_id from semesters  where  @.@ join student_enrolment.*  group by semesters.semester_id  order by count ( semesters.* )  desc limit 1"}, {"NatSQL": "select semesters.semester_name , semesters.semester_id where @.@ join student_enrolment.* group by semesters.semester_id order by count ( semesters.* ) desc limit 1", "sql": "select semesters.semester_name , semesters.semester_id from semesters  where  @.@ join student_enrolment.*  group by semesters.semester_id  order by count ( semesters.* )  desc limit 1"}, {"NatSQL": "select departments.department_description where departments.department_name like \"%computer%\"", "sql": "select departments.department_description from departments  where  departments.department_name like \"%computer%\" "}, {"NatSQL": "select departments.department_description where departments.department_name like \"%computer%\"", "sql": "select departments.department_description from departments  where  departments.department_name like \"%computer%\" "}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name , students.student_id where count ( student_enrolment.* ) = 2 group by students.student_id", "sql": "select students.first_name , students.middle_name , students.last_name , students.student_id from student_enrolment  where  count ( student_enrolment.* )  = 2  group by students.student_id "}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name , students.student_id where count ( student_enrolment.* ) = 2 group by students.student_id", "sql": "select students.first_name , students.middle_name , students.last_name , students.student_id from student_enrolment  where  count ( student_enrolment.* )  = 2  group by students.student_id "}, {"NatSQL": "select distinct students.first_name , students.middle_name , students.last_name where degree_programs.degree_summary_name = \"Bachelor\"", "sql": "select  distinct students.first_name , students.middle_name , students.last_name from students  where  degree_programs.degree_summary_name = \"Bachelor\" "}, {"NatSQL": "select distinct students.first_name , students.middle_name , students.last_name where degree_programs.degree_summary_name = \"Bachelor\"", "sql": "select  distinct students.first_name , students.middle_name , students.last_name from degree_programs  where  degree_programs.degree_summary_name = \"Bachelor\" "}, {"NatSQL": "select degree_programs.degree_summary_name group by degree_programs.degree_summary_name order by count ( student_enrolment.* ) desc limit 1", "sql": "select degree_programs.degree_summary_name from student_enrolment  group by degree_programs.degree_summary_name  order by count ( student_enrolment.* )  desc limit 1"}, {"NatSQL": "select degree_programs.degree_summary_name group by degree_programs.degree_summary_name order by count ( student_enrolment.* ) desc limit 1", "sql": "select degree_programs.degree_summary_name from degree_programs  group by degree_programs.degree_summary_name  order by count ( student_enrolment.* )  desc limit 1"}, {"NatSQL": "select degree_programs.degree_program_id , degree_programs.degree_summary_name group by degree_programs.degree_program_id order by count ( student_enrolment.* ) desc limit 1", "sql": "select degree_programs.degree_program_id , degree_programs.degree_summary_name from degree_programs  group by degree_programs.degree_program_id  order by count ( student_enrolment.* )  desc limit 1"}, {"NatSQL": "select degree_programs.degree_program_id , degree_programs.degree_summary_name group by degree_programs.degree_program_id order by count ( student_enrolment.* ) desc limit 1", "sql": "select degree_programs.degree_program_id , degree_programs.degree_summary_name from student_enrolment  group by degree_programs.degree_program_id  order by count ( student_enrolment.* )  desc limit 1"}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name , count ( student_enrolment.* ) , students.student_id , students.student_id group by students.student_id order by count ( student_enrolment.* ) desc limit 1", "sql": "select students.first_name , students.middle_name , students.last_name , count ( student_enrolment.* )  , students.student_id , students.student_id from students  group by students.student_id  order by count ( student_enrolment.* )  desc limit 1"}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name , count ( student_enrolment.* ) , students.student_id , students.student_id group by students.student_id order by count ( student_enrolment.* ) desc limit 1", "sql": "select students.first_name , students.middle_name , students.last_name , count ( student_enrolment.* )  , students.student_id , students.student_id from student_enrolment  group by students.student_id  order by count ( student_enrolment.* )  desc limit 1"}, {"NatSQL": "select semesters.semester_name where @.@ not in student_enrolment.*", "sql": "select semesters.semester_name from semesters  where  @.@ not in student_enrolment.* "}, {"NatSQL": "select semesters.semester_name where @.@ not in student_enrolment.*", "sql": "select semesters.semester_name from semesters  where  @.@ not in student_enrolment.* "}, {"NatSQL": "select distinct courses.course_name where @.@ join student_enrolment_courses.*", "sql": "select  distinct courses.course_name from courses  where  @.@ join student_enrolment_courses.* "}, {"NatSQL": "select distinct courses.course_name where @.@ join student_enrolment_courses.*", "sql": "select  distinct courses.course_name from courses  where  @.@ join student_enrolment_courses.* "}, {"NatSQL": "select courses.course_name group by courses.course_name order by count ( student_enrolment_courses.* ) desc limit 1", "sql": "select courses.course_name from student_enrolment_courses  group by courses.course_name  order by count ( student_enrolment_courses.* )  desc limit 1"}, {"NatSQL": "select courses.course_name group by courses.course_name order by count ( student_enrolment_courses.* ) desc limit 1", "sql": "select courses.course_name from student_enrolment_courses  group by courses.course_name  order by count ( student_enrolment_courses.* )  desc limit 1"}, {"NatSQL": "select students.last_name where addresses.state_province_county = \"NorthCarolina\" except_ @.@ join student_enrolment.*", "sql": "select students.last_name from students  where  addresses.state_province_county = \"NorthCarolina\"  except_  @.@ join student_enrolment.* "}, {"NatSQL": "select students.last_name where addresses.state_province_county = \"NorthCarolina\" except_ @.@ join student_enrolment.*", "sql": "select students.last_name from students  where  addresses.state_province_county = \"NorthCarolina\"  except_  @.@ join student_enrolment.* "}, {"NatSQL": "select transcripts.transcript_date , transcript_contents.transcript_id where count ( transcripts.* ) >= 2 group by transcript_contents.transcript_id", "sql": "select transcripts.transcript_date , transcript_contents.transcript_id from transcripts  where  count ( transcripts.* )  >= 2  group by transcript_contents.transcript_id "}, {"NatSQL": "select transcripts.transcript_date , transcript_contents.transcript_id where count ( transcripts.* ) >= 2 group by transcript_contents.transcript_id", "sql": "select transcripts.transcript_date , transcript_contents.transcript_id from transcripts  where  count ( transcripts.* )  >= 2  group by transcript_contents.transcript_id "}, {"NatSQL": "select students.cell_mobile_number where students.first_name = \"Timmothy\" and students.last_name = \"Ward\"", "sql": "select students.cell_mobile_number from students  where  students.first_name = \"Timmothy\"  and  students.last_name = \"Ward\" "}, {"NatSQL": "select students.cell_mobile_number where students.first_name = \"Timmothy\" and students.last_name = \"Ward\"", "sql": "select students.cell_mobile_number from students  where  students.first_name = \"Timmothy\"  and  students.last_name = \"Ward\" "}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name order by students.date_first_registered asc limit 1", "sql": "select students.first_name , students.middle_name , students.last_name from students  order by students.date_first_registered asc limit 1"}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name order by students.date_first_registered asc limit 1", "sql": "select students.first_name , students.middle_name , students.last_name from students  order by students.date_first_registered asc limit 1"}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name order by students.date_left asc limit 1", "sql": "select students.first_name , students.middle_name , students.last_name from students  order by students.date_left asc limit 1"}, {"NatSQL": "select students.first_name , students.middle_name , students.last_name order by students.date_left asc limit 1", "sql": "select students.first_name , students.middle_name , students.last_name from students  order by students.date_left asc limit 1"}, {"NatSQL": "select students.first_name where students.current_address_id != students.permanent_address_id", "sql": "select students.first_name from students  where  students.current_address_id != students.permanent_address_id "}, {"NatSQL": "select students.first_name where students.current_address_id != students.permanent_address_id", "sql": "select students.first_name from students  where  students.current_address_id != students.permanent_address_id "}, {"NatSQL": "select addresses.address_id , addresses.line_1 , addresses.line_2 group by addresses.address_id order by count ( students.* ) desc limit 1", "sql": "select addresses.address_id , addresses.line_1 , addresses.line_2 from addresses  group by addresses.address_id  order by count ( students.* )  desc limit 1"}, {"NatSQL": "select addresses.address_id , addresses.line_1 , addresses.line_2 group by addresses.address_id order by count ( students.* ) desc limit 1", "sql": "select addresses.address_id , addresses.line_1 , addresses.line_2 from addresses  group by addresses.address_id  order by count ( students.* )  desc limit 1"}, {"NatSQL": "select avg ( transcripts.transcript_date )", "sql": "select avg ( transcripts.transcript_date )  from transcripts "}, {"NatSQL": "select avg ( transcripts.transcript_date )", "sql": "select avg ( transcripts.transcript_date )  from transcripts "}, {"NatSQL": "select transcripts.transcript_date , transcripts.other_details order by transcripts.transcript_date asc limit 1", "sql": "select transcripts.transcript_date , transcripts.other_details from transcripts  order by transcripts.transcript_date asc limit 1"}, {"NatSQL": "select transcripts.transcript_date , transcripts.other_details order by transcripts.transcript_date asc limit 1", "sql": "select transcripts.transcript_date , transcripts.other_details from transcripts  order by transcripts.transcript_date asc limit 1"}, {"NatSQL": "select count ( transcripts.* )", "sql": "select count ( transcripts.* )  from transcripts "}, {"NatSQL": "select count ( transcripts.* )", "sql": "select count ( transcripts.* )  from transcripts "}, {"NatSQL": "select transcripts.transcript_date order by transcripts.transcript_date desc limit 1", "sql": "select transcripts.transcript_date from transcripts  order by transcripts.transcript_date desc limit 1"}, {"NatSQL": "select transcripts.transcript_date order by transcripts.transcript_date desc limit 1", "sql": "select transcripts.transcript_date from transcripts  order by transcripts.transcript_date desc limit 1"}, {"NatSQL": "select count ( transcript_contents.* ) , transcript_contents.student_course_id group by transcript_contents.student_course_id order by count ( transcript_contents.* ) desc limit 1", "sql": "select count ( transcript_contents.* )  , transcript_contents.student_course_id from transcript_contents  group by transcript_contents.student_course_id  order by count ( transcript_contents.* )  desc limit 1"}, {"NatSQL": "select count ( transcript_contents.* ) , transcript_contents.student_course_id group by transcript_contents.student_course_id order by count ( transcript_contents.* ) desc limit 1", "sql": "select count ( transcript_contents.* )  , transcript_contents.student_course_id from transcript_contents  group by transcript_contents.student_course_id  order by count ( transcript_contents.* )  desc limit 1"}, {"NatSQL": "select transcripts.transcript_date , transcript_contents.transcript_id group by transcript_contents.transcript_id order by count ( transcript_contents.* ) asc limit 1", "sql": "select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents  group by transcript_contents.transcript_id  order by count ( transcript_contents.* )  asc limit 1"}, {"NatSQL": "select transcripts.transcript_date , transcript_contents.transcript_id group by transcript_contents.transcript_id order by count ( transcript_contents.* ) asc limit 1", "sql": "select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents  group by transcript_contents.transcript_id  order by count ( transcript_contents.* )  asc limit 1"}, {"NatSQL": "select distinct student_enrolment.semester_id where degree_programs.degree_summary_name = \"Master\" and degree_programs.degree_summary_name = \"Bachelor\"", "sql": "select  distinct student_enrolment.semester_id from degree_programs  where  degree_programs.degree_summary_name = \"Master\"  and  degree_programs.degree_summary_name = \"Bachelor\" "}, {"NatSQL": "select distinct student_enrolment.semester_id where degree_programs.degree_summary_name = \"Master\" and degree_programs.degree_summary_name = \"Bachelor\"", "sql": "select  distinct student_enrolment.semester_id from degree_programs  where  degree_programs.degree_summary_name = \"Master\"  and  degree_programs.degree_summary_name = \"Bachelor\" "}, {"NatSQL": "select count ( distinct students.current_address_id )", "sql": "select count (  distinct students.current_address_id )  from students "}, {"NatSQL": "select count ( distinct students.current_address_id )", "sql": "select count (  distinct students.current_address_id )  from students "}, {"NatSQL": "select students.other_student_details order by students.other_student_details desc", "sql": "select students.other_student_details from students  order by students.other_student_details desc"}, {"NatSQL": "select students.other_student_details order by students.other_student_details desc", "sql": "select students.other_student_details from students  order by students.other_student_details desc"}, {"NatSQL": "select sections.section_description where sections.section_name = \"h\"", "sql": "select sections.section_description from sections  where  sections.section_name = \"h\" "}, {"NatSQL": "select sections.section_description where sections.section_name = \"h\"", "sql": "select sections.section_description from sections  where  sections.section_name = \"h\" "}, {"NatSQL": "select students.first_name where addresses.country = \"haiti\" or students.cell_mobile_number = \"09700166582\"", "sql": "select students.first_name from students  where  addresses.country = \"haiti\"  or  students.cell_mobile_number = \"09700166582\" "}, {"NatSQL": "select students.first_name where addresses.country = \"haiti\" or students.cell_mobile_number = \"09700166582\"", "sql": "select students.first_name from students  where  addresses.country = \"haiti\"  or  students.cell_mobile_number = \"09700166582\" "}, {"NatSQL": "select cartoon.Title order by cartoon.Title asc", "sql": "select cartoon.Title from cartoon  order by cartoon.Title asc"}, {"NatSQL": "select cartoon.Title order by cartoon.Title asc", "sql": "select cartoon.Title from cartoon  order by cartoon.Title asc"}, {"NatSQL": "select cartoon.Title where cartoon.Directed_by = \"Ben Jones\"", "sql": "select cartoon.Title from cartoon  where  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select cartoon.Title where cartoon.Directed_by = \"Ben Jones\"", "sql": "select cartoon.Title from cartoon  where  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select count ( cartoon.* ) where cartoon.Written_by = \"Joseph Kuhr\"", "sql": "select count ( cartoon.* )  from cartoon  where  cartoon.Written_by = \"Joseph Kuhr\" "}, {"NatSQL": "select count ( cartoon.* ) where cartoon.Written_by = \"Joseph Kuhr\"", "sql": "select count ( cartoon.* )  from cartoon  where  cartoon.Written_by = \"Joseph Kuhr\" "}, {"NatSQL": "select cartoon.Title , cartoon.Directed_by order by cartoon.Original_air_date asc", "sql": "select cartoon.Title , cartoon.Directed_by from cartoon  order by cartoon.Original_air_date asc"}, {"NatSQL": "select cartoon.Title , cartoon.Directed_by order by cartoon.Original_air_date asc", "sql": "select cartoon.Title , cartoon.Directed_by from cartoon  order by cartoon.Original_air_date asc"}, {"NatSQL": "select cartoon.Title where cartoon.Directed_by = \"Ben Jones\" or cartoon.Directed_by = \"Brandon Vietti\"", "sql": "select cartoon.Title from cartoon  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "}, {"NatSQL": "select cartoon.Title where cartoon.Directed_by = \"Ben Jones\" or cartoon.Directed_by = \"Brandon Vietti\"", "sql": "select cartoon.Title from cartoon  where  cartoon.Directed_by = \"Ben Jones\"  or  cartoon.Directed_by = \"Brandon Vietti\" "}, {"NatSQL": "select tv_channel.Country , count ( tv_channel.* ) group by tv_channel.Country order by count ( tv_channel.* ) desc limit 1", "sql": "select tv_channel.Country , count ( tv_channel.* )  from tv_channel  group by tv_channel.Country  order by count ( tv_channel.* )  desc limit 1"}, {"NatSQL": "select tv_channel.Country , count ( tv_channel.* ) group by tv_channel.Country order by count ( tv_channel.* ) desc limit 1", "sql": "select tv_channel.Country , count ( tv_channel.* )  from tv_channel  group by tv_channel.Country  order by count ( tv_channel.* )  desc limit 1"}, {"NatSQL": "select count ( distinct tv_channel.series_name ) , count ( distinct tv_channel.Content )", "sql": "select count (  distinct tv_channel.series_name )  , count (  distinct tv_channel.Content )  from tv_channel "}, {"NatSQL": "select count ( distinct tv_channel.series_name ) , count ( distinct tv_channel.Content )", "sql": "select count (  distinct tv_channel.series_name )  , count (  distinct tv_channel.Content )  from tv_channel "}, {"NatSQL": "select tv_channel.Content where tv_channel.series_name = \"Sky Radio\"", "sql": "select tv_channel.Content from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select tv_channel.Content where tv_channel.series_name = \"Sky Radio\"", "sql": "select tv_channel.Content from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select tv_channel.Package_Option where tv_channel.series_name = \"Sky Radio\"", "sql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select tv_channel.Package_Option where tv_channel.series_name = \"Sky Radio\"", "sql": "select tv_channel.Package_Option from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select count ( tv_channel.* ) where tv_channel.Language = \"English\"", "sql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\" "}, {"NatSQL": "select count ( tv_channel.* ) where tv_channel.Language = \"English\"", "sql": "select count ( tv_channel.* )  from tv_channel  where  tv_channel.Language = \"English\" "}, {"NatSQL": "select tv_channel.Language , count ( tv_channel.* ) group by tv_channel.Language order by count ( tv_channel.* ) asc limit 1", "sql": "select tv_channel.Language , count ( tv_channel.* )  from tv_channel  group by tv_channel.Language  order by count ( tv_channel.* )  asc limit 1"}, {"NatSQL": "select tv_channel.Language , count ( tv_channel.* ) group by tv_channel.Language order by count ( tv_channel.* ) asc limit 1", "sql": "select tv_channel.Language , count ( tv_channel.* )  from tv_channel  group by tv_channel.Language  order by count ( tv_channel.* )  asc limit 1"}, {"NatSQL": "select tv_channel.Language , count ( tv_channel.* ) group by tv_channel.Language", "sql": "select tv_channel.Language , count ( tv_channel.* )  from tv_channel  group by tv_channel.Language "}, {"NatSQL": "select tv_channel.Language , count ( tv_channel.* ) group by tv_channel.Language", "sql": "select tv_channel.Language , count ( tv_channel.* )  from tv_channel  group by tv_channel.Language "}, {"NatSQL": "select tv_channel.series_name where cartoon.Title = \"The Rise of the Blue Beetle!\"", "sql": "select tv_channel.series_name from tv_channel  where  cartoon.Title = \"The Rise of the Blue Beetle!\" "}, {"NatSQL": "select tv_channel.series_name where cartoon.Title = \"The Rise of the Blue Beetle!\"", "sql": "select tv_channel.series_name from tv_channel  where  cartoon.Title = \"The Rise of the Blue Beetle!\" "}, {"NatSQL": "select cartoon.Title where tv_channel.series_name = \"Sky Radio\"", "sql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select cartoon.Title where tv_channel.series_name = \"Sky Radio\"", "sql": "select cartoon.Title from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select tv_series.Episode order by tv_series.Rating asc", "sql": "select tv_series.Episode from tv_series  order by tv_series.Rating asc"}, {"NatSQL": "select tv_series.Episode order by tv_series.Rating asc", "sql": "select tv_series.Episode from tv_series  order by tv_series.Rating asc"}, {"NatSQL": "select tv_series.Episode , tv_series.Rating order by tv_series.Rating desc limit 3", "sql": "select tv_series.Episode , tv_series.Rating from tv_series  order by tv_series.Rating desc limit 3"}, {"NatSQL": "select tv_series.Episode , tv_series.Rating order by tv_series.Rating desc limit 3", "sql": "select tv_series.Episode , tv_series.Rating from tv_series  order by tv_series.Rating desc limit 3"}, {"NatSQL": "select max ( tv_series.Share ) , min ( tv_series.Share )", "sql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_series "}, {"NatSQL": "select max ( tv_series.Share ) , min ( tv_series.Share )", "sql": "select max ( tv_series.Share )  , min ( tv_series.Share )  from tv_series "}, {"NatSQL": "select tv_series.Air_Date where tv_series.Episode = \"A Love of a Lifetime\"", "sql": "select tv_series.Air_Date from tv_series  where  tv_series.Episode = \"A Love of a Lifetime\" "}, {"NatSQL": "select tv_series.Air_Date where tv_series.Episode = \"A Love of a Lifetime\"", "sql": "select tv_series.Air_Date from tv_series  where  tv_series.Episode = \"A Love of a Lifetime\" "}, {"NatSQL": "select tv_series.Weekly_Rank where tv_series.Episode = \"A Love of a Lifetime\"", "sql": "select tv_series.Weekly_Rank from tv_series  where  tv_series.Episode = \"A Love of a Lifetime\" "}, {"NatSQL": "select tv_series.Weekly_Rank where tv_series.Episode = \"A Love of a Lifetime\"", "sql": "select tv_series.Weekly_Rank from tv_series  where  tv_series.Episode = \"A Love of a Lifetime\" "}, {"NatSQL": "select tv_channel.series_name where tv_series.Episode = \"A Love of a Lifetime\"", "sql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "}, {"NatSQL": "select tv_channel.series_name where tv_series.Episode = \"A Love of a Lifetime\"", "sql": "select tv_channel.series_name from tv_channel  where  tv_series.Episode = \"A Love of a Lifetime\" "}, {"NatSQL": "select tv_series.Episode where tv_channel.series_name = \"Sky Radio\"", "sql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select tv_series.Episode where tv_channel.series_name = \"Sky Radio\"", "sql": "select tv_series.Episode from tv_channel  where  tv_channel.series_name = \"Sky Radio\" "}, {"NatSQL": "select count ( cartoon.* ) , cartoon.Directed_by group by cartoon.Directed_by", "sql": "select count ( cartoon.* )  , cartoon.Directed_by from cartoon  group by cartoon.Directed_by "}, {"NatSQL": "select count ( cartoon.* ) , cartoon.Directed_by group by cartoon.Directed_by", "sql": "select count ( cartoon.* )  , cartoon.Directed_by from cartoon  group by cartoon.Directed_by "}, {"NatSQL": "select cartoon.Production_code , cartoon.Channel order by cartoon.Original_air_date desc limit 1", "sql": "select cartoon.Production_code , cartoon.Channel from cartoon  order by cartoon.Original_air_date desc limit 1"}, {"NatSQL": "select cartoon.Production_code , cartoon.Channel order by cartoon.Original_air_date desc limit 1", "sql": "select cartoon.Production_code , cartoon.Channel from cartoon  order by cartoon.Original_air_date desc limit 1"}, {"NatSQL": "select tv_channel.Package_Option , tv_channel.series_name where tv_channel.Hight_definition_TV = \"yes\"", "sql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "}, {"NatSQL": "select tv_channel.Package_Option , tv_channel.series_name where tv_channel.Hight_definition_TV = \"yes\"", "sql": "select tv_channel.Package_Option , tv_channel.series_name from tv_channel  where  tv_channel.Hight_definition_TV = \"yes\" "}, {"NatSQL": "select tv_channel.Country where cartoon.Written_by = \"Todd Casey\"", "sql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "}, {"NatSQL": "select tv_channel.Country where cartoon.Written_by = \"Todd Casey\"", "sql": "select tv_channel.Country from tv_channel  where  cartoon.Written_by = \"Todd Casey\" "}, {"NatSQL": "select tv_channel.Country where except_ @.@ is cartoon.* and cartoon.Written_by = \"Todd Casey\"", "sql": "select tv_channel.Country from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Written_by = \"Todd Casey\" "}, {"NatSQL": "select tv_channel.Country where except_ @.@ is cartoon.* and cartoon.Written_by = \"Todd Casey\"", "sql": "select tv_channel.Country from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Written_by = \"Todd Casey\" "}, {"NatSQL": "select tv_channel.series_name , tv_channel.Country where cartoon.Directed_by = \"Michael Chang\" and cartoon.Directed_by = \"Ben Jones\"", "sql": "select tv_channel.series_name , tv_channel.Country from tv_channel  where  cartoon.Directed_by = \"Michael Chang\"  and  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select tv_channel.series_name , tv_channel.Country where cartoon.Directed_by = \"Michael Chang\" and cartoon.Directed_by = \"Ben Jones\"", "sql": "select tv_channel.series_name , tv_channel.Country from tv_channel  where  cartoon.Directed_by = \"Michael Chang\"  and  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country where tv_channel.Language != \"English\"", "sql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\" "}, {"NatSQL": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country where tv_channel.Language != \"English\"", "sql": "select tv_channel.Pixel_aspect_ratio_PAR , tv_channel.Country from tv_channel  where  tv_channel.Language != \"English\" "}, {"NatSQL": "select tv_channel.id where count ( tv_channel.* ) > 2 group by tv_channel.Country", "sql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  group by tv_channel.Country "}, {"NatSQL": "select tv_channel.id where count ( tv_channel.* ) > 2 group by tv_channel.Country", "sql": "select tv_channel.id from tv_channel  where  count ( tv_channel.* )  > 2  group by tv_channel.Country "}, {"NatSQL": "select tv_channel.id where except_ @.@ is cartoon.* and cartoon.Directed_by = \"Ben Jones\"", "sql": "select tv_channel.id from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select tv_channel.id where except_ @.@ is cartoon.* and cartoon.Directed_by = \"Ben Jones\"", "sql": "select tv_channel.id from tv_channel  where  except_  @.@ is cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select tv_channel.Package_Option where @.@ not in cartoon.* and cartoon.Directed_by = \"Ben Jones\"", "sql": "select tv_channel.Package_Option from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select tv_channel.Package_Option where @.@ not in cartoon.* and cartoon.Directed_by = \"Ben Jones\"", "sql": "select tv_channel.Package_Option from tv_channel  where  @.@ not in cartoon.*  and  cartoon.Directed_by = \"Ben Jones\" "}, {"NatSQL": "select count ( poker_player.* )", "sql": "select count ( poker_player.* )  from poker_player "}, {"NatSQL": "select count ( poker_player.* )", "sql": "select count ( poker_player.* )  from poker_player "}, {"NatSQL": "select poker_player.Earnings order by poker_player.Earnings desc", "sql": "select poker_player.Earnings from poker_player  order by poker_player.Earnings desc"}, {"NatSQL": "select poker_player.Earnings order by poker_player.Earnings desc", "sql": "select poker_player.Earnings from poker_player  order by poker_player.Earnings desc"}, {"NatSQL": "select poker_player.Final_Table_Made , poker_player.Best_Finish", "sql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player "}, {"NatSQL": "select poker_player.Final_Table_Made , poker_player.Best_Finish", "sql": "select poker_player.Final_Table_Made , poker_player.Best_Finish from poker_player "}, {"NatSQL": "select avg ( poker_player.Earnings )", "sql": "select avg ( poker_player.Earnings )  from poker_player "}, {"NatSQL": "select avg ( poker_player.Earnings )", "sql": "select avg ( poker_player.Earnings )  from poker_player "}, {"NatSQL": "select poker_player.Money_Rank order by poker_player.Earnings desc limit 1", "sql": "select poker_player.Money_Rank from poker_player  order by poker_player.Earnings desc limit 1"}, {"NatSQL": "select poker_player.Money_Rank order by poker_player.Earnings desc limit 1", "sql": "select poker_player.Money_Rank from poker_player  order by poker_player.Earnings desc limit 1"}, {"NatSQL": "select max ( poker_player.Final_Table_Made ) where poker_player.Earnings < 200000", "sql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  poker_player.Earnings < 200000 "}, {"NatSQL": "select max ( poker_player.Final_Table_Made ) where poker_player.Earnings < 200000", "sql": "select max ( poker_player.Final_Table_Made )  from poker_player  where  poker_player.Earnings < 200000 "}, {"NatSQL": "select people.Name where @.@ join poker_player.*", "sql": "select people.Name from poker_player  where  @.@ join poker_player.* "}, {"NatSQL": "select people.Name where @.@ join poker_player.*", "sql": "select people.Name from poker_player  where  @.@ join poker_player.* "}, {"NatSQL": "select people.Name where poker_player.Earnings > 300000", "sql": "select people.Name from poker_player  where  poker_player.Earnings > 300000 "}, {"NatSQL": "select people.Name where poker_player.Earnings > 300000", "sql": "select people.Name from poker_player  where  poker_player.Earnings > 300000 "}, {"NatSQL": "select people.Name order by poker_player.Final_Table_Made asc", "sql": "select people.Name from poker_player  order by poker_player.Final_Table_Made asc"}, {"NatSQL": "select people.Name order by poker_player.Final_Table_Made asc", "sql": "select people.Name from poker_player  order by poker_player.Final_Table_Made asc"}, {"NatSQL": "select people.Birth_Date order by poker_player.Earnings asc limit 1", "sql": "select people.Birth_Date from poker_player  order by poker_player.Earnings asc limit 1"}, {"NatSQL": "select people.Birth_Date order by poker_player.Earnings asc limit 1", "sql": "select people.Birth_Date from poker_player  order by poker_player.Earnings asc limit 1"}, {"NatSQL": "select poker_player.Money_Rank order by people.Height desc limit 1", "sql": "select poker_player.Money_Rank from poker_player  order by people.Height desc limit 1"}, {"NatSQL": "select poker_player.Money_Rank order by people.Height desc limit 1", "sql": "select poker_player.Money_Rank from poker_player  order by people.Height desc limit 1"}, {"NatSQL": "select avg ( poker_player.Earnings ) where people.Height > 200", "sql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200 "}, {"NatSQL": "select avg ( poker_player.Earnings ) where people.Height > 200", "sql": "select avg ( poker_player.Earnings )  from poker_player  where  people.Height > 200 "}, {"NatSQL": "select people.Name order by poker_player.Earnings desc", "sql": "select people.Name from poker_player  order by poker_player.Earnings desc"}, {"NatSQL": "select people.Name order by poker_player.Earnings desc", "sql": "select people.Name from poker_player  order by poker_player.Earnings desc"}, {"NatSQL": "select people.Nationality , count ( people.* ) group by people.Nationality", "sql": "select people.Nationality , count ( people.* )  from people  group by people.Nationality "}, {"NatSQL": "select people.Nationality , count ( people.* ) group by people.Nationality", "sql": "select people.Nationality , count ( people.* )  from people  group by people.Nationality "}, {"NatSQL": "select people.Nationality group by people.Nationality order by count ( people.* ) desc limit 1", "sql": "select people.Nationality from people  group by people.Nationality  order by count ( people.* )  desc limit 1"}, {"NatSQL": "select people.Nationality group by people.Nationality order by count ( people.* ) desc limit 1", "sql": "select people.Nationality from people  group by people.Nationality  order by count ( people.* )  desc limit 1"}, {"NatSQL": "select people.Nationality where count ( people.* ) >= 2 group by people.Nationality", "sql": "select people.Nationality from people  where  count ( people.* )  >= 2  group by people.Nationality "}, {"NatSQL": "select people.Nationality where count ( people.* ) >= 2 group by people.Nationality", "sql": "select people.Nationality from people  where  count ( people.* )  >= 2  group by people.Nationality "}, {"NatSQL": "select people.Name , people.Birth_Date order by people.Name asc", "sql": "select people.Name , people.Birth_Date from people  order by people.Name asc"}, {"NatSQL": "select people.Name , people.Birth_Date order by people.Name asc", "sql": "select people.Name , people.Birth_Date from people  order by people.Name asc"}, {"NatSQL": "select people.Name where people.Nationality != \"Russia\"", "sql": "select people.Name from people  where  people.Nationality != \"Russia\" "}, {"NatSQL": "select people.Name where people.Nationality != \"Russia\"", "sql": "select people.Name from people  where  people.Nationality != \"Russia\" "}, {"NatSQL": "select people.Name where @.@ not in poker_player.*", "sql": "select people.Name from people  where  @.@ not in poker_player.* "}, {"NatSQL": "select people.Name where @.@ not in poker_player.*", "sql": "select people.Name from people  where  @.@ not in poker_player.* "}, {"NatSQL": "select count ( distinct people.Nationality )", "sql": "select count (  distinct people.Nationality )  from people "}, {"NatSQL": "select count ( distinct people.Nationality )", "sql": "select count (  distinct people.Nationality )  from people "}, {"NatSQL": "select count ( area_code_state.* )", "sql": "select count ( area_code_state.* )  from area_code_state "}, {"NatSQL": "select contestants.contestant_number , contestants.contestant_name order by contestants.contestant_name desc", "sql": "select contestants.contestant_number , contestants.contestant_name from contestants  order by contestants.contestant_name desc"}, {"NatSQL": "select votes.vote_id , votes.phone_number , votes.state", "sql": "select votes.vote_id , votes.phone_number , votes.state from votes "}, {"NatSQL": "select max ( area_code_state.area_code ) , min ( area_code_state.area_code )", "sql": "select max ( area_code_state.area_code )  , min ( area_code_state.area_code )  from area_code_state "}, {"NatSQL": "select max ( votes.created ) where votes.state = \"CA\"", "sql": "select max ( votes.created )  from votes  where  votes.state = \"CA\" "}, {"NatSQL": "select contestants.contestant_name where contestants.contestant_name != \"Jessie Alloway\"", "sql": "select contestants.contestant_name from contestants  where  contestants.contestant_name != \"Jessie Alloway\" "}, {"NatSQL": "select distinct votes.state , votes.created", "sql": "select  distinct votes.state , votes.created from votes "}, {"NatSQL": "select contestants.contestant_number , contestants.contestant_name where count ( votes.* ) >= 2 group by contestants.contestant_number", "sql": "select contestants.contestant_number , contestants.contestant_name from contestants  where  count ( votes.* )  >= 2  group by contestants.contestant_number "}, {"NatSQL": "select contestants.contestant_number , contestants.contestant_name group by contestants.contestant_number order by count ( votes.* ) asc limit 1", "sql": "select contestants.contestant_number , contestants.contestant_name from contestants  group by contestants.contestant_number  order by count ( votes.* )  asc limit 1"}, {"NatSQL": "select count ( votes.* ) where votes.state = \"NY\" or votes.state = \"CA\"", "sql": "select count ( votes.* )  from votes  where  votes.state = \"NY\"  or  votes.state = \"CA\" "}, {"NatSQL": "select count ( contestants.* ) where @.@ not in votes.*", "sql": "select count ( contestants.* )  from contestants  where  @.@ not in votes.* "}, {"NatSQL": "select area_code_state.area_code group by area_code_state.area_code order by count ( votes.* ) desc limit 1", "sql": "select area_code_state.area_code from area_code_state  group by area_code_state.area_code  order by count ( votes.* )  desc limit 1"}, {"NatSQL": "select votes.created , votes.state , votes.phone_number where contestants.contestant_name = \"Tabatha Gehling\"", "sql": "select votes.created , votes.state , votes.phone_number from contestants  where  contestants.contestant_name = \"Tabatha Gehling\" "}, {"NatSQL": "select area_code_state.area_code where contestants.contestant_name = \"Tabatha Gehling\" and contestants.contestant_name = \"Kelly Clauss\"", "sql": "select area_code_state.area_code from contestants  where  contestants.contestant_name = \"Tabatha Gehling\"  and  contestants.contestant_name = \"Kelly Clauss\" "}, {"NatSQL": "select contestants.contestant_name where contestants.contestant_name like \"%Al%\"", "sql": "select contestants.contestant_name from contestants  where  contestants.contestant_name like \"%Al%\" "}, {"NatSQL": "select country.Name where country.IndepYear > 1950", "sql": "select country.Name from country  where  country.IndepYear > 1950 "}, {"NatSQL": "select country.Name where country.IndepYear > 1950", "sql": "select country.Name from country  where  country.IndepYear > 1950 "}, {"NatSQL": "select count ( country.* ) where country.GovernmentForm = \"Republic\"", "sql": "select count ( country.* )  from country  where  country.GovernmentForm = \"Republic\" "}, {"NatSQL": "select count ( country.* ) where country.GovernmentForm = \"Republic\"", "sql": "select count ( country.* )  from country  where  country.GovernmentForm = \"Republic\" "}, {"NatSQL": "select sum ( country.SurfaceArea ) where country.Region = \"Caribbean\"", "sql": "select sum ( country.SurfaceArea )  from country  where  country.Region = \"Caribbean\" "}, {"NatSQL": "select sum ( country.SurfaceArea ) where country.Region = \"Caribbean\"", "sql": "select sum ( country.SurfaceArea )  from country  where  country.Region = \"Caribbean\" "}, {"NatSQL": "select country.Continent where country.Name = \"Anguilla\"", "sql": "select country.Continent from country  where  country.Name = \"Anguilla\" "}, {"NatSQL": "select country.Continent where country.Name = \"Anguilla\"", "sql": "select country.Continent from country  where  country.Name = \"Anguilla\" "}, {"NatSQL": "select country.Region where city.Name = \"Kabul\"", "sql": "select country.Region from country  where  city.Name = \"Kabul\" "}, {"NatSQL": "select country.Region where city.Name = \"Kabul\"", "sql": "select country.Region from country  where  city.Name = \"Kabul\" "}, {"NatSQL": "select countrylanguage.Language where country.Name = \"Aruba\" order by countrylanguage.Percentage desc limit 1", "sql": "select countrylanguage.Language from country  where  country.Name = \"Aruba\"  order by countrylanguage.Percentage desc limit 1"}, {"NatSQL": "select countrylanguage.Language where country.Name = \"Aruba\" order by countrylanguage.Percentage desc limit 1", "sql": "select countrylanguage.Language from country  where  country.Name = \"Aruba\"  order by countrylanguage.Percentage desc limit 1"}, {"NatSQL": "select country.Population , country.LifeExpectancy where country.Name = \"Brazil\"", "sql": "select country.Population , country.LifeExpectancy from country  where  country.Name = \"Brazil\" "}, {"NatSQL": "select country.Population , country.LifeExpectancy where country.Name = \"Brazil\"", "sql": "select country.Population , country.LifeExpectancy from country  where  country.Name = \"Brazil\" "}, {"NatSQL": "select country.Population , country.Region where country.Name = \"Angola\"", "sql": "select country.Population , country.Region from country  where  country.Name = \"Angola\" "}, {"NatSQL": "select country.Population , country.Region where country.Name = \"Angola\"", "sql": "select country.Population , country.Region from country  where  country.Name = \"Angola\" "}, {"NatSQL": "select avg ( country.LifeExpectancy ) where country.Region = \"Central Africa\"", "sql": "select avg ( country.LifeExpectancy )  from country  where  country.Region = \"Central Africa\" "}, {"NatSQL": "select avg ( country.LifeExpectancy ) where country.Region = \"Central Africa\"", "sql": "select avg ( country.LifeExpectancy )  from country  where  country.Region = \"Central Africa\" "}, {"NatSQL": "select country.Name where country.Continent = \"Asia\" order by country.LifeExpectancy asc limit 1", "sql": "select country.Name from country  where  country.Continent = \"Asia\"  order by country.LifeExpectancy asc limit 1"}, {"NatSQL": "select country.Name where country.Continent = \"Asia\" order by country.LifeExpectancy asc limit 1", "sql": "select country.Name from country  where  country.Continent = \"Asia\"  order by country.LifeExpectancy asc limit 1"}, {"NatSQL": "select sum ( country.Population ) , max ( country.GNP ) where country.Continent = \"Asia\"", "sql": "select sum ( country.Population )  , max ( country.GNP )  from country  where  country.Continent = \"Asia\" "}, {"NatSQL": "select sum ( country.Population ) , max ( country.GNP ) where country.Continent = \"Asia\"", "sql": "select sum ( country.Population )  , max ( country.GNP )  from country  where  country.Continent = \"Asia\" "}, {"NatSQL": "select avg ( country.LifeExpectancy ) where country.Continent = \"Africa\" and country.GovernmentForm = \"Republic\"", "sql": "select avg ( country.LifeExpectancy )  from country  where  country.Continent = \"Africa\"  and  country.GovernmentForm = \"Republic\" "}, {"NatSQL": "select avg ( country.LifeExpectancy ) where country.Continent = \"Africa\" and country.GovernmentForm = \"Republic\"", "sql": "select avg ( country.LifeExpectancy )  from country  where  country.Continent = \"Africa\"  and  country.GovernmentForm = \"Republic\" "}, {"NatSQL": "select sum ( country.SurfaceArea ) where country.Continent = \"Asia\" or country.Continent = \"Europe\"", "sql": "select sum ( country.SurfaceArea )  from country  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "}, {"NatSQL": "select sum ( country.SurfaceArea ) where country.Continent = \"Asia\" or country.Continent = \"Europe\"", "sql": "select sum ( country.SurfaceArea )  from country  where  country.Continent = \"Asia\"  or  country.Continent = \"Europe\" "}, {"NatSQL": "select sum ( city.Population ) where city.District = \"Gelderland\"", "sql": "select sum ( city.Population )  from city  where  city.District = \"Gelderland\" "}, {"NatSQL": "select sum ( city.Population ) where city.District = \"Gelderland\"", "sql": "select sum ( city.Population )  from city  where  city.District = \"Gelderland\" "}, {"NatSQL": "select avg ( country.GNP ) , sum ( country.Population ) where country.GovernmentForm = \"US Territory\"", "sql": "select avg ( country.GNP )  , sum ( country.Population )  from country  where  country.GovernmentForm = \"US Territory\" "}, {"NatSQL": "select avg ( country.GNP ) , sum ( country.Population ) where country.GovernmentForm = \"US Territory\"", "sql": "select avg ( country.GNP )  , sum ( country.Population )  from country  where  country.GovernmentForm = \"US Territory\" "}, {"NatSQL": "select count ( distinct countrylanguage.Language )", "sql": "select count (  distinct countrylanguage.Language )  from countrylanguage "}, {"NatSQL": "select count ( distinct countrylanguage.Language )", "sql": "select count (  distinct countrylanguage.Language )  from countrylanguage "}, {"NatSQL": "select count ( distinct country.GovernmentForm ) where country.Continent = \"Africa\"", "sql": "select count (  distinct country.GovernmentForm )  from country  where  country.Continent = \"Africa\" "}, {"NatSQL": "select count ( distinct country.GovernmentForm ) where country.Continent = \"Africa\"", "sql": "select count (  distinct country.GovernmentForm )  from country  where  country.Continent = \"Africa\" "}, {"NatSQL": "select count ( countrylanguage.Language ) where country.Name = \"Aruba\"", "sql": "select count ( countrylanguage.Language )  from country  where  country.Name = \"Aruba\" "}, {"NatSQL": "select count ( countrylanguage.Language ) where country.Name = \"Aruba\"", "sql": "select count ( countrylanguage.Language )  from country  where  country.Name = \"Aruba\" "}, {"NatSQL": "select count ( country.* ) where country.Name = \"Afghanistan\" and countrylanguage.IsOfficial = \"T\"", "sql": "select count ( country.* )  from country  where  country.Name = \"Afghanistan\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select count ( country.* ) where country.Name = \"Afghanistan\" and countrylanguage.IsOfficial = \"T\"", "sql": "select count ( country.* )  from country  where  country.Name = \"Afghanistan\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select country.Name group by country.Name order by count ( countrylanguage.* ) desc limit 1", "sql": "select country.Name from countrylanguage  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"}, {"NatSQL": "select country.Name group by country.Name order by count ( countrylanguage.* ) desc limit 1", "sql": "select country.Name from countrylanguage  group by country.Name  order by count ( countrylanguage.* )  desc limit 1"}, {"NatSQL": "select country.Continent group by country.Continent order by count ( countrylanguage.* ) desc limit 1", "sql": "select country.Continent from countrylanguage  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"}, {"NatSQL": "select country.Continent group by country.Continent order by count ( countrylanguage.* ) desc limit 1", "sql": "select country.Continent from countrylanguage  group by country.Continent  order by count ( countrylanguage.* )  desc limit 1"}, {"NatSQL": "select count ( country.* ) where countrylanguage.Language = \"English\" and countrylanguage.Language = \"Dutch\"", "sql": "select count ( country.* )  from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "}, {"NatSQL": "select count ( country.* ) where countrylanguage.Language = \"English\" and countrylanguage.Language = \"Dutch\"", "sql": "select count ( country.* )  from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"Dutch\" "}, {"NatSQL": "select country.Name where countrylanguage.Language = \"English\" and countrylanguage.Language = \"French\"", "sql": "select country.Name from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "}, {"NatSQL": "select country.Name where countrylanguage.Language = \"English\" and countrylanguage.Language = \"French\"", "sql": "select country.Name from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.Language = \"French\" "}, {"NatSQL": "select country.Name where countrylanguage.Language = \"English\" and countrylanguage.IsOfficial = \"T\" and countrylanguage.Language = \"French\" and countrylanguage.IsOfficial = \"T\"", "sql": "select country.Name from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select country.Name where countrylanguage.Language = \"English\" and countrylanguage.IsOfficial = \"T\" and countrylanguage.Language = \"French\" and countrylanguage.IsOfficial = \"T\"", "sql": "select country.Name from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"French\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select count ( distinct country.Continent ) where countrylanguage.Language = \"Chinese\"", "sql": "select count (  distinct country.Continent )  from country  where  countrylanguage.Language = \"Chinese\" "}, {"NatSQL": "select count ( distinct country.Continent ) where countrylanguage.Language = \"Chinese\"", "sql": "select count (  distinct country.Continent )  from country  where  countrylanguage.Language = \"Chinese\" "}, {"NatSQL": "select distinct country.Region where countrylanguage.Language = \"English\" or countrylanguage.Language = \"Dutch\"", "sql": "select  distinct country.Region from country  where  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\" "}, {"NatSQL": "select distinct country.Region where countrylanguage.Language = \"English\" or countrylanguage.Language = \"Dutch\"", "sql": "select  distinct country.Region from country  where  countrylanguage.Language = \"English\"  or  countrylanguage.Language = \"Dutch\" "}, {"NatSQL": "select country.name where countrylanguage.Language = \"English\" and countrylanguage.IsOfficial = \"T\" or countrylanguage.Language = \"Dutch\" and countrylanguage.IsOfficial = \"T\"", "sql": "select country.name from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select country.name where countrylanguage.Language = \"English\" and countrylanguage.IsOfficial = \"T\" or countrylanguage.Language = \"Dutch\" and countrylanguage.IsOfficial = \"T\"", "sql": "select country.name from country  where  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\"  or  countrylanguage.Language = \"Dutch\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select countrylanguage.Language where country.Continent = \"Asia\" group by countrylanguage.Language order by count ( country.* ) desc limit 1", "sql": "select countrylanguage.Language from country  where  country.Continent = \"Asia\"  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"}, {"NatSQL": "select countrylanguage.Language where country.Continent = \"Asia\" group by countrylanguage.Language order by count ( country.* ) desc limit 1", "sql": "select countrylanguage.Language from country  where  country.Continent = \"Asia\"  group by countrylanguage.Language  order by count ( country.* )  desc limit 1"}, {"NatSQL": "select countrylanguage.Language where country.GovernmentForm = \"Republic\" and count ( country.* ) = 1 group by countrylanguage.Language", "sql": "select countrylanguage.Language from country  where  country.GovernmentForm = \"Republic\"  and  count ( country.* )  = 1  group by countrylanguage.Language "}, {"NatSQL": "select countrylanguage.Language where country.GovernmentForm = \"Republic\" and count ( country.* ) = 1 group by countrylanguage.Language", "sql": "select countrylanguage.Language from country  where  country.GovernmentForm = \"Republic\"  and  count ( country.* )  = 1  group by countrylanguage.Language "}, {"NatSQL": "select city.Name , city.Population where countrylanguage.Language = \"English\" order by city.Population desc limit 1", "sql": "select city.Name , city.Population from city  where  countrylanguage.Language = \"English\"  order by city.Population desc limit 1"}, {"NatSQL": "select city.Name , city.Population where countrylanguage.Language = \"English\" order by city.Population desc limit 1", "sql": "select city.Name , city.Population from city  where  countrylanguage.Language = \"English\"  order by city.Population desc limit 1"}, {"NatSQL": "select country.Name , country.Population , country.LifeExpectancy where country.Continent = \"Asia\" order by country.SurfaceArea desc limit 1", "sql": "select country.Name , country.Population , country.LifeExpectancy from country  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"}, {"NatSQL": "select country.Name , country.Population , country.LifeExpectancy where country.Continent = \"Asia\" order by country.SurfaceArea desc limit 1", "sql": "select country.Name , country.Population , country.LifeExpectancy from country  where  country.Continent = \"Asia\"  order by country.SurfaceArea desc limit 1"}, {"NatSQL": "select avg ( country.LifeExpectancy ) where @.@ not in country.Name and countrylanguage.Language = \"English\" and countrylanguage.IsOfficial = \"T\"", "sql": "select avg ( country.LifeExpectancy )  from country  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select avg ( country.LifeExpectancy ) where @.@ not in country.Name and countrylanguage.Language = \"English\" and countrylanguage.IsOfficial = \"T\"", "sql": "select avg ( country.LifeExpectancy )  from country  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select sum ( country.Population ) where @.@ not in country.Name and countrylanguage.Language = \"English\"", "sql": "select sum ( country.Population )  from country  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "}, {"NatSQL": "select sum ( country.Population ) where @.@ not in country.Name and countrylanguage.Language = \"English\"", "sql": "select sum ( country.Population )  from country  where  @.@ not in country.Name  and  countrylanguage.Language = \"English\" "}, {"NatSQL": "select countrylanguage.Language where country.HeadOfState = \"Beatrix\" and countrylanguage.IsOfficial = \"T\"", "sql": "select countrylanguage.Language from country  where  country.HeadOfState = \"Beatrix\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select countrylanguage.Language where country.HeadOfState = \"Beatrix\" and countrylanguage.IsOfficial = \"T\"", "sql": "select countrylanguage.Language from country  where  country.HeadOfState = \"Beatrix\"  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select count ( distinct countrylanguage.Language ) where country.IndepYear < 1930 and countrylanguage.IsOfficial = \"T\"", "sql": "select count (  distinct countrylanguage.Language )  from country  where  country.IndepYear < 1930  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select count ( distinct countrylanguage.Language ) where country.IndepYear < 1930 and countrylanguage.IsOfficial = \"T\"", "sql": "select count (  distinct countrylanguage.Language )  from country  where  country.IndepYear < 1930  and  countrylanguage.IsOfficial = \"T\" "}, {"NatSQL": "select country.Name where @.@ > min ( country.SurfaceArea ) and country.Continent = \"Europe\"", "sql": "select country.Name from country  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Europe\" "}, {"NatSQL": "select country.Name where @.@ > min ( country.SurfaceArea ) and country.Continent = \"Europe\"", "sql": "select country.Name from country  where  @.@ > min ( country.SurfaceArea )   and  country.Continent = \"Europe\" "}, {"NatSQL": "select country.Name where country.Continent = \"Africa\" and @.@ < max ( country.Population ) and country.Continent = \"Asia\"", "sql": "select country.Name from country  where  country.Continent = \"Africa\"  and  @.@ < max ( country.Population )   and  country.Continent = \"Asia\" "}, {"NatSQL": "select country.Name where country.Continent = \"Africa\" and @.@ < min ( country.Population ) and country.Continent = \"Asia\"", "sql": "select country.Name from country  where  country.Continent = \"Africa\"  and  @.@ < min ( country.Population )   and  country.Continent = \"Asia\" "}, {"NatSQL": "select country.Name where country.Continent = \"Asia\" and @.@ > max ( country.Population ) and country.Continent = \"Africa\"", "sql": "select country.Name from country  where  country.Continent = \"Asia\"  and  @.@ > max ( country.Population )   and  country.Continent = \"Africa\" "}, {"NatSQL": "select country.Name where country.Continent = \"Asia\" and @.@ > min ( country.Population ) and country.Continent = \"Africa\"", "sql": "select country.Name from country  where  country.Continent = \"Asia\"  and  @.@ > min ( country.Population )   and  country.Continent = \"Africa\" "}, {"NatSQL": "select countrylanguage.CountryCode where except_ @.@ is countrylanguage.* and countrylanguage.Language = \"English\"", "sql": "select countrylanguage.CountryCode from countrylanguage  where  except_  @.@ is countrylanguage.*  and  countrylanguage.Language = \"English\" "}, {"NatSQL": "select countrylanguage.CountryCode where except_ @.@ is countrylanguage.* and countrylanguage.Language = \"English\"", "sql": "select countrylanguage.CountryCode from countrylanguage  where  except_  @.@ is countrylanguage.*  and  countrylanguage.Language = \"English\" "}, {"NatSQL": "select distinct countrylanguage.CountryCode where countrylanguage.Language != \"English\"", "sql": "select  distinct countrylanguage.CountryCode from countrylanguage  where  countrylanguage.Language != \"English\" "}, {"NatSQL": "select distinct countrylanguage.CountryCode where countrylanguage.Language != \"English\"", "sql": "select  distinct countrylanguage.CountryCode from countrylanguage  where  countrylanguage.Language != \"English\" "}, {"NatSQL": "select country.Code where countrylanguage.Language != \"English\" and country.GovernmentForm != \"Republic\"", "sql": "select country.Code from country  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\" "}, {"NatSQL": "select country.Code where countrylanguage.Language != \"English\" and country.GovernmentForm != \"Republic\"", "sql": "select country.Code from country  where  countrylanguage.Language != \"English\"  and  country.GovernmentForm != \"Republic\" "}, {"NatSQL": "select distinct city.Name where country.Continent = \"Europe\" and @.@ not in country.Name and countrylanguage.IsOfficial = \"T\" and countrylanguage.Language = \"English\"", "sql": "select  distinct city.Name from city  where  country.Continent = \"Europe\"  and  @.@ not in country.Name  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"English\" "}, {"NatSQL": "select distinct city.Name where country.Continent = \"Europe\" and @.@ not in country.Name and countrylanguage.IsOfficial = \"T\" and countrylanguage.Language = \"English\"", "sql": "select  distinct city.Name from city  where  country.Continent = \"Europe\"  and  @.@ not in country.Name  and  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"English\" "}, {"NatSQL": "select distinct city.Name where countrylanguage.IsOfficial = \"t\" and countrylanguage.Language = \"chinese\" and country.Continent = \"asia\"", "sql": "select  distinct city.Name from city  where  countrylanguage.IsOfficial = \"t\"  and  countrylanguage.Language = \"chinese\"  and  country.Continent = \"asia\" "}, {"NatSQL": "select distinct city.Name where countrylanguage.IsOfficial = \"T\" and countrylanguage.Language = \"Chinese\" and country.Continent = \"Asia\"", "sql": "select  distinct city.Name from city  where  countrylanguage.IsOfficial = \"T\"  and  countrylanguage.Language = \"Chinese\"  and  country.Continent = \"Asia\" "}, {"NatSQL": "select country.Name , country.SurfaceArea , country.IndepYear order by country.Population asc limit 1", "sql": "select country.Name , country.SurfaceArea , country.IndepYear from country  order by country.Population asc limit 1"}, {"NatSQL": "select country.Name , country.SurfaceArea , country.IndepYear order by country.Population asc limit 1", "sql": "select country.Name , country.SurfaceArea , country.IndepYear from country  order by country.Population asc limit 1"}, {"NatSQL": "select country.Name , country.Population , country.HeadOfState order by country.SurfaceArea desc limit 1", "sql": "select country.Name , country.Population , country.HeadOfState from country  order by country.SurfaceArea desc limit 1"}, {"NatSQL": "select country.Name , country.Population , country.HeadOfState order by country.SurfaceArea desc limit 1", "sql": "select country.Name , country.Population , country.HeadOfState from country  order by country.SurfaceArea desc limit 1"}, {"NatSQL": "select count ( countrylanguage.Language ) , country.Name where count ( country.* ) > 2 group by country.Name", "sql": "select count ( countrylanguage.Language )  , country.Name from country  where  count ( country.* )  > 2  group by country.Name "}, {"NatSQL": "select count ( countrylanguage.Language ) , country.Name where count ( country.* ) > 2 group by country.Name", "sql": "select count ( countrylanguage.Language )  , country.Name from country  where  count ( country.* )  > 2  group by country.Name "}, {"NatSQL": "select count ( city.* ) , city.District where @.@ > avg ( city.Population ) group by city.District", "sql": "select count ( city.* )  , city.District from city  where  @.@ > avg ( city.Population )   group by city.District "}, {"NatSQL": "select count ( city.* ) , city.District where @.@ > avg ( city.Population ) group by city.District", "sql": "select count ( city.* )  , city.District from city  where  @.@ > avg ( city.Population )   group by city.District "}, {"NatSQL": "select sum ( country.Population ) , country.GovernmentForm where avg ( country.LifeExpectancy ) > 72 group by country.GovernmentForm", "sql": "select sum ( country.Population )  , country.GovernmentForm from country  where  avg ( country.LifeExpectancy )  > 72  group by country.GovernmentForm "}, {"NatSQL": "select sum ( country.Population ) , country.GovernmentForm where avg ( country.LifeExpectancy ) > 72 group by country.GovernmentForm", "sql": "select sum ( country.Population )  , country.GovernmentForm from country  where  avg ( country.LifeExpectancy )  > 72  group by country.GovernmentForm "}, {"NatSQL": "select sum ( country.Population ) , avg ( country.LifeExpectancy ) , country.Continent where avg ( country.LifeExpectancy ) < 72 group by country.Continent", "sql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from country  where  avg ( country.LifeExpectancy )  < 72  group by country.Continent "}, {"NatSQL": "select sum ( country.Population ) , avg ( country.LifeExpectancy ) , country.Continent where avg ( country.LifeExpectancy ) < 72 group by country.Continent", "sql": "select sum ( country.Population )  , avg ( country.LifeExpectancy )  , country.Continent from country  where  avg ( country.LifeExpectancy )  < 72  group by country.Continent "}, {"NatSQL": "select country.Name , country.SurfaceArea order by country.SurfaceArea desc limit 5", "sql": "select country.Name , country.SurfaceArea from country  order by country.SurfaceArea desc limit 5"}, {"NatSQL": "select country.Name , country.SurfaceArea order by country.SurfaceArea desc limit 5", "sql": "select country.Name , country.SurfaceArea from country  order by country.SurfaceArea desc limit 5"}, {"NatSQL": "select country.Name order by country.Population desc limit 3", "sql": "select country.Name from country  order by country.Population desc limit 3"}, {"NatSQL": "select country.Name order by country.Population desc limit 3", "sql": "select country.Name from country  order by country.Population desc limit 3"}, {"NatSQL": "select country.Name order by country.Population asc limit 3", "sql": "select country.Name from country  order by country.Population asc limit 3"}, {"NatSQL": "select country.Name order by country.Population asc limit 3", "sql": "select country.Name from country  order by country.Population asc limit 3"}, {"NatSQL": "select count ( country.* ) where country.Continent = \"Asia\"", "sql": "select count ( country.* )  from country  where  country.Continent = \"Asia\" "}, {"NatSQL": "select count ( country.* ) where country.Continent = \"Asia\"", "sql": "select count ( country.* )  from country  where  country.Continent = \"Asia\" "}, {"NatSQL": "select country.Name where country.Continent = \"Europe\" and country.Population = \"80000\"", "sql": "select country.Name from country  where  country.Continent = \"Europe\"  and  country.Population = \"80000\" "}, {"NatSQL": "select country.Name where country.Continent = \"Europe\" and country.Population = \"80000\"", "sql": "select country.Name from country  where  country.Continent = \"Europe\"  and  country.Population = \"80000\" "}, {"NatSQL": "select sum ( country.Population ) , avg ( country.SurfaceArea ) where country.Continent = \"north america\" and country.SurfaceArea > 3000", "sql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from country  where  country.Continent = \"north america\"  and  country.SurfaceArea > 3000 "}, {"NatSQL": "select sum ( country.Population ) , avg ( country.SurfaceArea ) where country.Continent = \"north america\" and country.SurfaceArea > 3000", "sql": "select sum ( country.Population )  , avg ( country.SurfaceArea )  from country  where  country.Continent = \"north america\"  and  country.SurfaceArea > 3000 "}, {"NatSQL": "select city.Name where city.Population between 160000 and 900000", "sql": "select city.Name from city  where  city.Population between 160000 and 900000 "}, {"NatSQL": "select city.Name where city.Population between 160000 and 900000", "sql": "select city.Name from city  where  city.Population between 160000 and 900000 "}, {"NatSQL": "select countrylanguage.Language group by countrylanguage.Language order by count ( countrylanguage.* ) desc limit 1", "sql": "select countrylanguage.Language from countrylanguage  group by countrylanguage.Language  order by count ( countrylanguage.* )  desc limit 1"}, {"NatSQL": "select countrylanguage.Language group by countrylanguage.Language order by count ( countrylanguage.* ) desc limit 1", "sql": "select countrylanguage.Language from countrylanguage  group by countrylanguage.Language  order by count ( countrylanguage.* )  desc limit 1"}, {"NatSQL": "select countrylanguage.Language , countrylanguage.CountryCode , max ( countrylanguage.Percentage ) group by countrylanguage.CountryCode", "sql": "select countrylanguage.Language , countrylanguage.CountryCode , max ( countrylanguage.Percentage )  from countrylanguage  group by countrylanguage.CountryCode "}, {"NatSQL": "select countrylanguage.Language , countrylanguage.CountryCode , max ( countrylanguage.Percentage ) group by countrylanguage.CountryCode", "sql": "select countrylanguage.Language , countrylanguage.CountryCode , max ( countrylanguage.Percentage )  from countrylanguage  group by countrylanguage.CountryCode "}, {"NatSQL": "select count ( countrylanguage.* ) , max ( countrylanguage.Percentage ) where countrylanguage.Language = \"Spanish\" group by countrylanguage.CountryCode", "sql": "select count ( countrylanguage.* )  , max ( countrylanguage.Percentage )  from countrylanguage  where  countrylanguage.Language = \"Spanish\"  group by countrylanguage.CountryCode "}, {"NatSQL": "select count ( countrylanguage.* ) , max ( countrylanguage.Percentage ) where countrylanguage.Language = \"Spanish\" group by countrylanguage.CountryCode", "sql": "select count ( countrylanguage.* )  , max ( countrylanguage.Percentage )  from countrylanguage  where  countrylanguage.Language = \"Spanish\"  group by countrylanguage.CountryCode "}, {"NatSQL": "select countrylanguage.CountryCode , max ( countrylanguage.Percentage ) where countrylanguage.Language = \"Spanish\" group by countrylanguage.CountryCode", "sql": "select countrylanguage.CountryCode , max ( countrylanguage.Percentage )  from countrylanguage  where  countrylanguage.Language = \"Spanish\"  group by countrylanguage.CountryCode "}, {"NatSQL": "select countrylanguage.CountryCode , max ( countrylanguage.Percentage ) where countrylanguage.Language = \"Spanish\" group by countrylanguage.CountryCode", "sql": "select countrylanguage.CountryCode , max ( countrylanguage.Percentage )  from countrylanguage  where  countrylanguage.Language = \"Spanish\"  group by countrylanguage.CountryCode "}, {"NatSQL": "select count ( conductor.* )", "sql": "select count ( conductor.* )  from conductor "}, {"NatSQL": "select count ( conductor.* )", "sql": "select count ( conductor.* )  from conductor "}, {"NatSQL": "select conductor.Name order by conductor.Age asc", "sql": "select conductor.Name from conductor  order by conductor.Age asc"}, {"NatSQL": "select conductor.Name order by conductor.Age asc", "sql": "select conductor.Name from conductor  order by conductor.Age asc"}, {"NatSQL": "select conductor.Name where conductor.Nationality != \"USA\"", "sql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "}, {"NatSQL": "select conductor.Name where conductor.Nationality != \"USA\"", "sql": "select conductor.Name from conductor  where  conductor.Nationality != \"USA\" "}, {"NatSQL": "select orchestra.Record_Company order by orchestra.Year_of_Founded desc", "sql": "select orchestra.Record_Company from orchestra  order by orchestra.Year_of_Founded desc"}, {"NatSQL": "select orchestra.Record_Company order by orchestra.Year_of_Founded desc", "sql": "select orchestra.Record_Company from orchestra  order by orchestra.Year_of_Founded desc"}, {"NatSQL": "select avg ( show.Attendance )", "sql": "select avg ( show.Attendance )  from show "}, {"NatSQL": "select avg ( show.Attendance )", "sql": "select avg ( show.Attendance )  from show "}, {"NatSQL": "select max ( performance.Share ) , min ( performance.Share ) where performance.Type != \"Live final\"", "sql": "select max ( performance.Share )  , min ( performance.Share )  from performance  where  performance.Type != \"Live final\" "}, {"NatSQL": "select max ( performance.Share ) , min ( performance.Share ) where performance.Type != \"Live final\"", "sql": "select max ( performance.Share )  , min ( performance.Share )  from performance  where  performance.Type != \"Live final\" "}, {"NatSQL": "select count ( distinct conductor.Nationality )", "sql": "select count (  distinct conductor.Nationality )  from conductor "}, {"NatSQL": "select count ( distinct conductor.Nationality )", "sql": "select count (  distinct conductor.Nationality )  from conductor "}, {"NatSQL": "select conductor.Name order by conductor.Year_of_Work desc", "sql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"}, {"NatSQL": "select conductor.Name order by conductor.Year_of_Work desc", "sql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc"}, {"NatSQL": "select conductor.Name order by conductor.Year_of_Work desc limit 1", "sql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"}, {"NatSQL": "select conductor.Name order by conductor.Year_of_Work desc limit 1", "sql": "select conductor.Name from conductor  order by conductor.Year_of_Work desc limit 1"}, {"NatSQL": "select conductor.Name , orchestra.Orchestra", "sql": "select conductor.Name , orchestra.Orchestra from conductor "}, {"NatSQL": "select conductor.Name , orchestra.Orchestra", "sql": "select conductor.Name , orchestra.Orchestra from conductor "}, {"NatSQL": "select conductor.Name where count ( orchestra.* ) > 1 group by orchestra.Conductor_ID", "sql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  group by orchestra.Conductor_ID "}, {"NatSQL": "select conductor.Name where count ( orchestra.* ) > 1 group by orchestra.Conductor_ID", "sql": "select conductor.Name from conductor  where  count ( orchestra.* )  > 1  group by orchestra.Conductor_ID "}, {"NatSQL": "select conductor.Name group by orchestra.Conductor_ID order by count ( orchestra.* ) desc limit 1", "sql": "select conductor.Name from conductor  group by orchestra.Conductor_ID  order by count ( orchestra.* )  desc limit 1"}, {"NatSQL": "select conductor.Name group by orchestra.Conductor_ID order by count ( orchestra.* ) desc limit 1", "sql": "select conductor.Name from conductor  group by orchestra.Conductor_ID  order by count ( orchestra.* )  desc limit 1"}, {"NatSQL": "select conductor.Name where orchestra.Year_of_Founded > 2008", "sql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "}, {"NatSQL": "select conductor.Name where orchestra.Year_of_Founded > 2008", "sql": "select conductor.Name from conductor  where  orchestra.Year_of_Founded > 2008 "}, {"NatSQL": "select orchestra.Record_Company , count ( orchestra.* ) group by orchestra.Record_Company", "sql": "select orchestra.Record_Company , count ( orchestra.* )  from orchestra  group by orchestra.Record_Company "}, {"NatSQL": "select orchestra.Record_Company , count ( orchestra.* ) group by orchestra.Record_Company", "sql": "select orchestra.Record_Company , count ( orchestra.* )  from orchestra  group by orchestra.Record_Company "}, {"NatSQL": "select orchestra.Major_Record_Format group by orchestra.Major_Record_Format order by count ( orchestra.* ) asc", "sql": "select orchestra.Major_Record_Format from orchestra  group by orchestra.Major_Record_Format  order by count ( orchestra.* )  asc"}, {"NatSQL": "select orchestra.Major_Record_Format group by orchestra.Major_Record_Format order by count ( orchestra.* ) asc", "sql": "select orchestra.Major_Record_Format from orchestra  group by orchestra.Major_Record_Format  order by count ( orchestra.* )  asc"}, {"NatSQL": "select orchestra.Record_Company group by orchestra.Record_Company order by count ( orchestra.* ) desc limit 1", "sql": "select orchestra.Record_Company from orchestra  group by orchestra.Record_Company  order by count ( orchestra.* )  desc limit 1"}, {"NatSQL": "select orchestra.Record_Company group by orchestra.Record_Company order by count ( orchestra.* ) desc limit 1", "sql": "select orchestra.Record_Company from orchestra  group by orchestra.Record_Company  order by count ( orchestra.* )  desc limit 1"}, {"NatSQL": "select orchestra.Orchestra where @.@ not in performance.*", "sql": "select orchestra.Orchestra from orchestra  where  @.@ not in performance.* "}, {"NatSQL": "select orchestra.Orchestra where @.@ not in performance.*", "sql": "select orchestra.Orchestra from orchestra  where  @.@ not in performance.* "}, {"NatSQL": "select orchestra.Record_Company where orchestra.Year_of_Founded < 2003 and orchestra.Year_of_Founded > 2003", "sql": "select orchestra.Record_Company from orchestra  where  orchestra.Year_of_Founded < 2003  and  orchestra.Year_of_Founded > 2003 "}, {"NatSQL": "select orchestra.Record_Company where orchestra.Year_of_Founded < 2003 and orchestra.Year_of_Founded > 2003", "sql": "select orchestra.Record_Company from orchestra  where  orchestra.Year_of_Founded < 2003  and  orchestra.Year_of_Founded > 2003 "}, {"NatSQL": "select count ( orchestra.* ) where orchestra.Major_Record_Format = \"CD\" or orchestra.Major_Record_Format = \"DVD\"", "sql": "select count ( orchestra.* )  from orchestra  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "}, {"NatSQL": "select count ( orchestra.* ) where orchestra.Major_Record_Format = \"CD\" or orchestra.Major_Record_Format = \"DVD\"", "sql": "select count ( orchestra.* )  from orchestra  where  orchestra.Major_Record_Format = \"CD\"  or  orchestra.Major_Record_Format = \"DVD\" "}, {"NatSQL": "select orchestra.Year_of_Founded where count ( performance.* ) > 1 group by performance.Orchestra_ID", "sql": "select orchestra.Year_of_Founded from orchestra  where  count ( performance.* )  > 1  group by performance.Orchestra_ID "}, {"NatSQL": "select orchestra.Year_of_Founded where count ( performance.* ) > 1 group by performance.Orchestra_ID", "sql": "select orchestra.Year_of_Founded from orchestra  where  count ( performance.* )  > 1  group by performance.Orchestra_ID "}, {"NatSQL": "select count ( highschooler.* )", "sql": "select count ( highschooler.* )  from highschooler "}, {"NatSQL": "select count ( highschooler.* )", "sql": "select count ( highschooler.* )  from highschooler "}, {"NatSQL": "select highschooler.name , highschooler.grade", "sql": "select highschooler.name , highschooler.grade from highschooler "}, {"NatSQL": "select highschooler.name , highschooler.grade", "sql": "select highschooler.name , highschooler.grade from highschooler "}, {"NatSQL": "select highschooler.grade", "sql": "select highschooler.grade from highschooler "}, {"NatSQL": "select highschooler.grade", "sql": "select highschooler.grade from highschooler "}, {"NatSQL": "select highschooler.grade where highschooler.name = \"Kyle\"", "sql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select highschooler.grade where highschooler.name = \"Kyle\"", "sql": "select highschooler.grade from highschooler  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select highschooler.name where highschooler.grade = 10", "sql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "}, {"NatSQL": "select highschooler.name where highschooler.grade = 10", "sql": "select highschooler.name from highschooler  where  highschooler.grade = 10 "}, {"NatSQL": "select highschooler.ID where highschooler.name = \"Kyle\"", "sql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select highschooler.ID where highschooler.name = \"Kyle\"", "sql": "select highschooler.ID from highschooler  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select count ( highschooler.* ) where highschooler.grade = 9 or highschooler.grade = 10", "sql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "}, {"NatSQL": "select count ( highschooler.* ) where highschooler.grade = 9 or highschooler.grade = 10", "sql": "select count ( highschooler.* )  from highschooler  where  highschooler.grade = 9  or  highschooler.grade = 10 "}, {"NatSQL": "select highschooler.grade , count ( highschooler.* ) group by highschooler.grade", "sql": "select highschooler.grade , count ( highschooler.* )  from highschooler  group by highschooler.grade "}, {"NatSQL": "select highschooler.grade , count ( highschooler.* ) group by highschooler.grade", "sql": "select highschooler.grade , count ( highschooler.* )  from highschooler  group by highschooler.grade "}, {"NatSQL": "select highschooler.grade group by highschooler.grade order by count ( highschooler.* ) desc limit 1", "sql": "select highschooler.grade from highschooler  group by highschooler.grade  order by count ( highschooler.* )  desc limit 1"}, {"NatSQL": "select highschooler.grade group by highschooler.grade order by count ( highschooler.* ) desc limit 1", "sql": "select highschooler.grade from highschooler  group by highschooler.grade  order by count ( highschooler.* )  desc limit 1"}, {"NatSQL": "select highschooler.grade where count ( highschooler.* ) >= 4 group by highschooler.grade", "sql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "}, {"NatSQL": "select highschooler.grade where count ( highschooler.* ) >= 4 group by highschooler.grade", "sql": "select highschooler.grade from highschooler  where  count ( highschooler.* )  >= 4  group by highschooler.grade "}, {"NatSQL": "select friend.student_id , count ( friend.* ) group by friend.student_id", "sql": "select friend.student_id , count ( friend.* )  from friend  group by friend.student_id "}, {"NatSQL": "select friend.student_id , count ( friend.* ) group by friend.student_id", "sql": "select friend.student_id , count ( friend.* )  from friend  group by friend.student_id "}, {"NatSQL": "select highschooler.name , count ( friend.* ) group by friend.student_id", "sql": "select highschooler.name , count ( friend.* )  from friend  group by friend.student_id "}, {"NatSQL": "select highschooler.name , count ( friend.* ) group by friend.student_id", "sql": "select highschooler.name , count ( friend.* )  from highschooler  group by friend.student_id "}, {"NatSQL": "select highschooler.name group by friend.student_id order by count ( friend.* ) desc limit 1", "sql": "select highschooler.name from highschooler  group by friend.student_id  order by count ( friend.* )  desc limit 1"}, {"NatSQL": "select highschooler.name group by friend.student_id order by count ( friend.* ) desc limit 1", "sql": "select highschooler.name from highschooler  group by friend.student_id  order by count ( friend.* )  desc limit 1"}, {"NatSQL": "select highschooler.name where count ( friend.* ) >= 3 group by friend.student_id", "sql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  group by friend.student_id "}, {"NatSQL": "select highschooler.name where count ( friend.* ) >= 3 group by friend.student_id", "sql": "select highschooler.name from highschooler  where  count ( friend.* )  >= 3  group by friend.student_id "}, {"NatSQL": "select highschooler.name where @.@ = friend.student_id and highschooler.name = \"Kyle\"", "sql": "select highschooler.name from friend  where  @.@ = friend.student_id  and  highschooler.name = \"Kyle\" "}, {"NatSQL": "select highschooler.name where @.@ = friend.student_id and highschooler.name = \"Kyle\"", "sql": "select highschooler.name from friend  where  @.@ = friend.student_id  and  highschooler.name = \"Kyle\" "}, {"NatSQL": "select count ( friend.* ) where highschooler.name = \"Kyle\"", "sql": "select count ( friend.* )  from friend  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select count ( friend.* ) where highschooler.name = \"Kyle\"", "sql": "select count ( friend.* )  from friend  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select highschooler.ID where except_ @.@ is friend.*", "sql": "select highschooler.ID from highschooler  where  except_  @.@ is friend.* "}, {"NatSQL": "select highschooler.ID where except_ @.@ is friend.*", "sql": "select highschooler.ID from highschooler  where  except_  @.@ is friend.* "}, {"NatSQL": "select highschooler.name where except_ @.@ is friend.*", "sql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "}, {"NatSQL": "select highschooler.name where except_ @.@ is friend.*", "sql": "select highschooler.name from highschooler  where  except_  @.@ is friend.* "}, {"NatSQL": "select highschooler.ID where intersect_ @.@ is likes.*", "sql": "select highschooler.ID from highschooler  where  intersect_  @.@ is likes.* "}, {"NatSQL": "select highschooler.ID where intersect_ @.@ is likes.*", "sql": "select highschooler.ID from highschooler  where  intersect_  @.@ is likes.* "}, {"NatSQL": "select highschooler.name where @.@ join friend.* and @.@ = likes.liked_id", "sql": "select highschooler.name from highschooler  where  @.@ join friend.*  and  @.@ = likes.liked_id "}, {"NatSQL": "select highschooler.name where @.@ join friend.* and @.@ = likes.liked_id", "sql": "select highschooler.name from highschooler  where  @.@ join friend.*  and  @.@ = likes.liked_id "}, {"NatSQL": "select likes.student_id , count ( likes.* ) group by likes.student_id", "sql": "select likes.student_id , count ( likes.* )  from likes  group by likes.student_id "}, {"NatSQL": "select likes.student_id , count ( likes.* ) group by likes.student_id", "sql": "select likes.student_id , count ( likes.* )  from likes  group by likes.student_id "}, {"NatSQL": "select highschooler.name , count ( likes.* ) group by likes.student_id", "sql": "select highschooler.name , count ( likes.* )  from likes  group by likes.student_id "}, {"NatSQL": "select highschooler.name , count ( likes.* ) group by likes.student_id", "sql": "select highschooler.name , count ( likes.* )  from likes  group by likes.student_id "}, {"NatSQL": "select highschooler.name group by likes.student_id order by count ( likes.* ) desc limit 1", "sql": "select highschooler.name from likes  group by likes.student_id  order by count ( likes.* )  desc limit 1"}, {"NatSQL": "select highschooler.name group by likes.student_id order by count ( likes.* ) desc limit 1", "sql": "select highschooler.name from likes  group by likes.student_id  order by count ( likes.* )  desc limit 1"}, {"NatSQL": "select highschooler.name where count ( likes.* ) >= 2 group by likes.student_id", "sql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  group by likes.student_id "}, {"NatSQL": "select highschooler.name where count ( likes.* ) >= 2 group by likes.student_id", "sql": "select highschooler.name from highschooler  where  count ( likes.* )  >= 2  group by likes.student_id "}, {"NatSQL": "select highschooler.name where highschooler.grade > 5 and count ( friend.* ) >= 2 group by friend.student_id", "sql": "select highschooler.name from highschooler  where  highschooler.grade > 5  and  count ( friend.* )  >= 2  group by friend.student_id "}, {"NatSQL": "select highschooler.name where highschooler.grade > 5 and count ( friend.* ) >= 2 group by friend.student_id", "sql": "select highschooler.name from highschooler  where  highschooler.grade > 5  and  count ( friend.* )  >= 2  group by friend.student_id "}, {"NatSQL": "select count ( likes.* ) where highschooler.name = \"Kyle\"", "sql": "select count ( likes.* )  from likes  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select count ( likes.* ) where highschooler.name = \"Kyle\"", "sql": "select count ( likes.* )  from likes  where  highschooler.name = \"Kyle\" "}, {"NatSQL": "select avg ( highschooler.grade ) where @.@ in friend.student_id and @.@ join highschooler.*", "sql": "select avg ( highschooler.grade )  from highschooler  where  @.@ in friend.student_id  and  @.@ join highschooler.* "}, {"NatSQL": "select avg ( highschooler.grade ) where @.@ in friend.student_id and @.@ join highschooler.*", "sql": "select avg ( highschooler.grade )  from highschooler  where  @.@ in friend.student_id  and  @.@ join highschooler.* "}, {"NatSQL": "select min ( highschooler.grade ) where @.@ not in friend.student_id and @.@ join highschooler.*", "sql": "select min ( highschooler.grade )  from highschooler  where  @.@ not in friend.student_id  and  @.@ join highschooler.* "}, {"NatSQL": "select min ( highschooler.grade ) where @.@ not in friend.student_id and @.@ join highschooler.*", "sql": "select min ( highschooler.grade )  from highschooler  where  @.@ not in friend.student_id  and  @.@ join highschooler.* "}, {"NatSQL": "select owners.state where intersect_ @.@ is professionals.*", "sql": "select owners.state from owners  where  intersect_  @.@ is professionals.* "}, {"NatSQL": "select owners.state where intersect_ @.@ is professionals.*", "sql": "select owners.state from owners  where  intersect_  @.@ is professionals.* "}, {"NatSQL": "select avg ( dogs.age ) where @.@ in treatments.*", "sql": "select avg ( dogs.age )  from dogs  where  @.@ in treatments.* "}, {"NatSQL": "select avg ( dogs.age ) where @.@ in treatments.*", "sql": "select avg ( dogs.age )  from dogs  where  @.@ in treatments.* "}, {"NatSQL": "select professionals.professional_id , professionals.last_name , professionals.cell_number where professionals.state = \"Indiana\" or count ( treatments.* ) > 2", "sql": "select professionals.professional_id , professionals.last_name , professionals.cell_number from professionals  where  professionals.state = \"Indiana\"  or  count ( treatments.* )  > 2 "}, {"NatSQL": "select professionals.professional_id , professionals.last_name , professionals.cell_number where professionals.state = \"Indiana\" or count ( treatments.* ) > 2", "sql": "select professionals.professional_id , professionals.last_name , professionals.cell_number from professionals  where  professionals.state = \"Indiana\"  or  count ( treatments.* )  > 2 "}, {"NatSQL": "select dogs.name where @.@ not in treatments.* and sum ( treatments.cost_of_treatment ) > 1000", "sql": "select dogs.name from dogs  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "}, {"NatSQL": "select dogs.name where @.@ not in treatments.* and sum ( treatments.cost_of_treatment ) > 1000", "sql": "select dogs.name from dogs  where  @.@ not in treatments.*  and  sum ( treatments.cost_of_treatment )  > 1000 "}, {"NatSQL": "select professionals.first_name where except_ @.@ is dogs.*", "sql": "select professionals.first_name from professionals  where  except_  @.@ is dogs.* "}, {"NatSQL": "select professionals.first_name where except_ @.@ is dogs.*", "sql": "select professionals.first_name from professionals  where  except_  @.@ is dogs.* "}, {"NatSQL": "select professionals.professional_id , professionals.role_code , professionals.email_address where except_ @.@ is treatments.*", "sql": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals  where  except_  @.@ is treatments.* "}, {"NatSQL": "select professionals.professional_id , professionals.role_code , professionals.email_address where except_ @.@ is treatments.*", "sql": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals  where  except_  @.@ is treatments.* "}, {"NatSQL": "select owners.owner_id , owners.first_name , owners.last_name group by dogs.owner_id order by count ( dogs.* ) desc limit 1", "sql": "select owners.owner_id , owners.first_name , owners.last_name from dogs  group by dogs.owner_id  order by count ( dogs.* )  desc limit 1"}, {"NatSQL": "select owners.owner_id , owners.first_name , owners.last_name group by dogs.owner_id order by count ( dogs.* ) desc limit 1", "sql": "select owners.owner_id , owners.first_name , owners.last_name from dogs  group by dogs.owner_id  order by count ( dogs.* )  desc limit 1"}, {"NatSQL": "select professionals.professional_id , professionals.role_code , professionals.first_name where count ( treatments.* ) >= 2 group by professionals.professional_id", "sql": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals  where  count ( treatments.* )  >= 2  group by professionals.professional_id "}, {"NatSQL": "select professionals.professional_id , professionals.role_code , professionals.first_name where count ( treatments.* ) >= 2 group by professionals.professional_id", "sql": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals  where  count ( treatments.* )  >= 2  group by professionals.professional_id "}, {"NatSQL": "select breeds.breed_name group by breeds.breed_name order by count ( dogs.* ) desc limit 1", "sql": "select breeds.breed_name from breeds  group by breeds.breed_name  order by count ( dogs.* )  desc limit 1"}, {"NatSQL": "select breeds.breed_name group by breeds.breed_name order by count ( dogs.* ) desc limit 1", "sql": "select breeds.breed_name from breeds  group by breeds.breed_name  order by count ( dogs.* )  desc limit 1"}, {"NatSQL": "select owners.owner_id , owners.last_name group by owners.owner_id order by count ( treatments.* ) desc limit 1", "sql": "select owners.owner_id , owners.last_name from treatments  group by owners.owner_id  order by count ( treatments.* )  desc limit 1"}, {"NatSQL": "select owners.owner_id , owners.last_name group by owners.owner_id order by count ( treatments.* ) desc limit 1", "sql": "select owners.owner_id , owners.last_name from treatments  group by owners.owner_id  order by count ( treatments.* )  desc limit 1"}, {"NatSQL": "select treatment_types.treatment_type_description group by treatment_types.treatment_type_code order by sum ( treatments.cost_of_treatment ) asc limit 1", "sql": "select treatment_types.treatment_type_description from treatment_types  group by treatment_types.treatment_type_code  order by sum ( treatments.cost_of_treatment )  asc limit 1"}, {"NatSQL": "select treatment_types.treatment_type_description group by treatment_types.treatment_type_code order by sum ( treatments.cost_of_treatment ) asc limit 1", "sql": "select treatment_types.treatment_type_description from treatment_types  group by treatment_types.treatment_type_code  order by sum ( treatments.cost_of_treatment )  asc limit 1"}, {"NatSQL": "select owners.owner_id , owners.zip_code group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1", "sql": "select owners.owner_id , owners.zip_code from owners  group by owners.owner_id  order by sum ( treatments.cost_of_treatment )  desc limit 1"}, {"NatSQL": "select owners.owner_id , owners.zip_code group by owners.owner_id order by sum ( treatments.cost_of_treatment ) desc limit 1", "sql": "select owners.owner_id , owners.zip_code from owners  group by owners.owner_id  order by sum ( treatments.cost_of_treatment )  desc limit 1"}, {"NatSQL": "select professionals.professional_id , professionals.cell_number where count ( treatments.* ) >= 2 group by professionals.professional_id", "sql": "select professionals.professional_id , professionals.cell_number from treatments  where  count ( treatments.* )  >= 2  group by professionals.professional_id "}, {"NatSQL": "select professionals.professional_id , professionals.cell_number where count ( treatments.* ) >= 2 group by professionals.professional_id", "sql": "select professionals.professional_id , professionals.cell_number from treatments  where  count ( treatments.* )  >= 2  group by professionals.professional_id "}, {"NatSQL": "select distinct professionals.first_name , professionals.last_name where @.@ < avg ( treatments.cost_of_treatment )", "sql": "select  distinct professionals.first_name , professionals.last_name from professionals  where  @.@ < avg ( treatments.cost_of_treatment )  "}, {"NatSQL": "select distinct professionals.first_name , professionals.last_name where @.@ < avg ( treatments.cost_of_treatment )", "sql": "select  distinct professionals.first_name , professionals.last_name from professionals  where  @.@ < avg ( treatments.cost_of_treatment )  "}, {"NatSQL": "select treatments.date_of_treatment , professionals.first_name", "sql": "select treatments.date_of_treatment , professionals.first_name from treatments "}, {"NatSQL": "select treatments.date_of_treatment , professionals.first_name", "sql": "select treatments.date_of_treatment , professionals.first_name from treatments "}, {"NatSQL": "select treatments.cost_of_treatment , treatment_types.treatment_type_description", "sql": "select treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments "}, {"NatSQL": "select treatments.cost_of_treatment , treatment_types.treatment_type_description", "sql": "select treatments.cost_of_treatment , treatment_types.treatment_type_description from treatments "}, {"NatSQL": "select owners.first_name , owners.last_name , dogs.size_code", "sql": "select owners.first_name , owners.last_name , dogs.size_code from owners "}, {"NatSQL": "select owners.first_name , owners.last_name , dogs.size_code", "sql": "select owners.first_name , owners.last_name , dogs.size_code from owners "}, {"NatSQL": "select owners.first_name , dogs.name", "sql": "select owners.first_name , dogs.name from owners "}, {"NatSQL": "select owners.first_name , dogs.name", "sql": "select owners.first_name , dogs.name from owners "}, {"NatSQL": "select dogs.name , treatments.date_of_treatment where @.@ = dogs.breed_code order by count ( dogs.* ) asc limit 1", "sql": "select dogs.name , treatments.date_of_treatment from dogs  where  @.@ = dogs.breed_code  order by count ( dogs.* )  asc limit 1"}, {"NatSQL": "select dogs.name , treatments.date_of_treatment where @.@ = dogs.breed_code order by count ( dogs.* ) asc limit 1", "sql": "select dogs.name , treatments.date_of_treatment from dogs  where  @.@ = dogs.breed_code  order by count ( dogs.* )  asc limit 1"}, {"NatSQL": "select owners.first_name , dogs.name where owners.state = \"Virginia\"", "sql": "select owners.first_name , dogs.name from owners  where  owners.state = \"Virginia\" "}, {"NatSQL": "select owners.first_name , dogs.name where owners.state = \"Virginia\"", "sql": "select owners.first_name , dogs.name from owners  where  owners.state = \"Virginia\" "}, {"NatSQL": "select distinct dogs.date_arrived , dogs.date_departed where @.@ join treatments.*", "sql": "select  distinct dogs.date_arrived , dogs.date_departed from treatments  where  @.@ join treatments.* "}, {"NatSQL": "select distinct dogs.date_arrived , dogs.date_departed where @.@ join treatments.*", "sql": "select  distinct dogs.date_arrived , dogs.date_departed from treatments  where  @.@ join treatments.* "}, {"NatSQL": "select owners.last_name where @.@ = max ( dogs.age )", "sql": "select owners.last_name from owners  where  @.@ = max ( dogs.age )  "}, {"NatSQL": "select owners.last_name where @.@ = max ( dogs.age )", "sql": "select owners.last_name from owners  where  @.@ = max ( dogs.age )  "}, {"NatSQL": "select professionals.email_address where professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"", "sql": "select professionals.email_address from professionals  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "}, {"NatSQL": "select professionals.email_address where professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"", "sql": "select professionals.email_address from professionals  where  professionals.state = \"Hawaii\"  or  professionals.state = \"Wisconsin\" "}, {"NatSQL": "select dogs.date_arrived , dogs.date_departed", "sql": "select dogs.date_arrived , dogs.date_departed from dogs "}, {"NatSQL": "select dogs.date_arrived , dogs.date_departed", "sql": "select dogs.date_arrived , dogs.date_departed from dogs "}, {"NatSQL": "select count ( distinct treatments.dog_id )", "sql": "select count (  distinct treatments.dog_id )  from treatments "}, {"NatSQL": "select count ( distinct treatments.dog_id )", "sql": "select count (  distinct treatments.dog_id )  from treatments "}, {"NatSQL": "select count ( distinct treatments.professional_id )", "sql": "select count (  distinct treatments.professional_id )  from treatments "}, {"NatSQL": "select count ( distinct treatments.professional_id )", "sql": "select count (  distinct treatments.professional_id )  from treatments "}, {"NatSQL": "select professionals.role_code , professionals.street , professionals.city , professionals.state where professionals.city like \"%West%\"", "sql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals  where  professionals.city like \"%West%\" "}, {"NatSQL": "select professionals.role_code , professionals.street , professionals.city , professionals.state where professionals.city like \"%West%\"", "sql": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals  where  professionals.city like \"%West%\" "}, {"NatSQL": "select owners.first_name , owners.last_name , owners.email_address where owners.state like \"%North%\"", "sql": "select owners.first_name , owners.last_name , owners.email_address from owners  where  owners.state like \"%North%\" "}, {"NatSQL": "select owners.first_name , owners.last_name , owners.email_address where owners.state like \"%North%\"", "sql": "select owners.first_name , owners.last_name , owners.email_address from owners  where  owners.state like \"%North%\" "}, {"NatSQL": "select count ( dogs.* ) where @.@ < avg ( dogs.age )", "sql": "select count ( dogs.* )  from dogs  where  @.@ < avg ( dogs.age )  "}, {"NatSQL": "select count ( dogs.* ) where @.@ < avg ( dogs.age )", "sql": "select count ( dogs.* )  from dogs  where  @.@ < avg ( dogs.age )  "}, {"NatSQL": "select treatments.cost_of_treatment order by treatments.date_of_treatment desc limit 1", "sql": "select treatments.cost_of_treatment from treatments  order by treatments.date_of_treatment desc limit 1"}, {"NatSQL": "select treatments.cost_of_treatment order by treatments.date_of_treatment desc limit 1", "sql": "select treatments.cost_of_treatment from treatments  order by treatments.date_of_treatment desc limit 1"}, {"NatSQL": "select count ( dogs.* ) where @.@ not in treatments.*", "sql": "select count ( dogs.* )  from dogs  where  @.@ not in treatments.* "}, {"NatSQL": "select count ( dogs.* ) where @.@ not in treatments.*", "sql": "select count ( dogs.* )  from dogs  where  @.@ not in treatments.* "}, {"NatSQL": "select count ( owners.* ) where @.@ not in dogs.*", "sql": "select count ( owners.* )  from owners  where  @.@ not in dogs.* "}, {"NatSQL": "select count ( owners.* ) where @.@ not in dogs.*", "sql": "select count ( owners.* )  from owners  where  @.@ not in dogs.* "}, {"NatSQL": "select count ( professionals.* ) where @.@ not in treatments.*", "sql": "select count ( professionals.* )  from professionals  where  @.@ not in treatments.* "}, {"NatSQL": "select count ( professionals.* ) where @.@ not in treatments.*", "sql": "select count ( professionals.* )  from professionals  where  @.@ not in treatments.* "}, {"NatSQL": "select dogs.name , dogs.age , dogs.weight where dogs.abandoned_yn = 1", "sql": "select dogs.name , dogs.age , dogs.weight from dogs  where  dogs.abandoned_yn = 1 "}, {"NatSQL": "select dogs.name , dogs.age , dogs.weight where dogs.abandoned_yn = 1", "sql": "select dogs.name , dogs.age , dogs.weight from dogs  where  dogs.abandoned_yn = 1 "}, {"NatSQL": "select avg ( dogs.age )", "sql": "select avg ( dogs.age )  from dogs "}, {"NatSQL": "select avg ( dogs.age )", "sql": "select avg ( dogs.age )  from dogs "}, {"NatSQL": "select max ( dogs.age )", "sql": "select max ( dogs.age )  from dogs "}, {"NatSQL": "select max ( dogs.age )", "sql": "select max ( dogs.age )  from dogs "}, {"NatSQL": "select charges.charge_type , charges.charge_amount", "sql": "select charges.charge_type , charges.charge_amount from charges "}, {"NatSQL": "select charges.charge_type , charges.charge_amount", "sql": "select charges.charge_type , charges.charge_amount from charges "}, {"NatSQL": "select max ( charges.charge_amount )", "sql": "select max ( charges.charge_amount )  from charges "}, {"NatSQL": "select max ( charges.charge_amount )", "sql": "select max ( charges.charge_amount )  from charges "}, {"NatSQL": "select professionals.email_address , professionals.cell_number , professionals.home_phone", "sql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from professionals "}, {"NatSQL": "select professionals.email_address , professionals.cell_number , professionals.home_phone", "sql": "select professionals.email_address , professionals.cell_number , professionals.home_phone from professionals "}, {"NatSQL": "select distinct dogs.breed_code , dogs.size_code", "sql": "select  distinct dogs.breed_code , dogs.size_code from dogs "}, {"NatSQL": "select distinct dogs.breed_code , dogs.size_code", "sql": "select  distinct dogs.breed_code , dogs.size_code from dogs "}, {"NatSQL": "select distinct professionals.first_name , treatment_types.treatment_type_description", "sql": "select  distinct professionals.first_name , treatment_types.treatment_type_description from professionals "}, {"NatSQL": "select distinct professionals.first_name , treatment_types.treatment_type_description", "sql": "select  distinct professionals.first_name , treatment_types.treatment_type_description from professionals "}, {"NatSQL": "select count ( singer.* )", "sql": "select count ( singer.* )  from singer "}, {"NatSQL": "select count ( singer.* )", "sql": "select count ( singer.* )  from singer "}, {"NatSQL": "select singer.Name order by singer.Net_Worth_Millions asc", "sql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"}, {"NatSQL": "select singer.Name order by singer.Net_Worth_Millions asc", "sql": "select singer.Name from singer  order by singer.Net_Worth_Millions asc"}, {"NatSQL": "select singer.Birth_Year , singer.Citizenship", "sql": "select singer.Birth_Year , singer.Citizenship from singer "}, {"NatSQL": "select singer.Birth_Year , singer.Citizenship", "sql": "select singer.Birth_Year , singer.Citizenship from singer "}, {"NatSQL": "select singer.Name where singer.Citizenship != \"France\"", "sql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "}, {"NatSQL": "select singer.Name where singer.Citizenship != \"France\"", "sql": "select singer.Name from singer  where  singer.Citizenship != \"France\" "}, {"NatSQL": "select singer.Name where singer.Birth_Year = 1948 or singer.Birth_Year = 1949", "sql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "}, {"NatSQL": "select singer.Name where singer.Birth_Year = 1948 or singer.Birth_Year = 1949", "sql": "select singer.Name from singer  where  singer.Birth_Year = 1948  or  singer.Birth_Year = 1949 "}, {"NatSQL": "select singer.Name order by singer.Net_Worth_Millions desc limit 1", "sql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"}, {"NatSQL": "select singer.Name order by singer.Net_Worth_Millions desc limit 1", "sql": "select singer.Name from singer  order by singer.Net_Worth_Millions desc limit 1"}, {"NatSQL": "select singer.Citizenship , count ( singer.* ) group by singer.Citizenship", "sql": "select singer.Citizenship , count ( singer.* )  from singer  group by singer.Citizenship "}, {"NatSQL": "select singer.Citizenship , count ( singer.* ) group by singer.Citizenship", "sql": "select singer.Citizenship , count ( singer.* )  from singer  group by singer.Citizenship "}, {"NatSQL": "select singer.Citizenship group by singer.Citizenship order by count ( singer.* ) desc limit 1", "sql": "select singer.Citizenship from singer  group by singer.Citizenship  order by count ( singer.* )  desc limit 1"}, {"NatSQL": "select singer.Citizenship group by singer.Citizenship order by count ( singer.* ) desc limit 1", "sql": "select singer.Citizenship from singer  group by singer.Citizenship  order by count ( singer.* )  desc limit 1"}, {"NatSQL": "select singer.Citizenship , max ( singer.Net_Worth_Millions ) group by singer.Citizenship", "sql": "select singer.Citizenship , max ( singer.Net_Worth_Millions )  from singer  group by singer.Citizenship "}, {"NatSQL": "select singer.Citizenship , max ( singer.Net_Worth_Millions ) group by singer.Citizenship", "sql": "select singer.Citizenship , max ( singer.Net_Worth_Millions )  from singer  group by singer.Citizenship "}, {"NatSQL": "select song.Title , singer.Name", "sql": "select song.Title , singer.Name from singer "}, {"NatSQL": "select song.Title , singer.Name", "sql": "select song.Title , singer.Name from singer "}, {"NatSQL": "select distinct singer.Name where song.Sales > 300000", "sql": "select  distinct singer.Name from singer  where  song.Sales > 300000 "}, {"NatSQL": "select distinct singer.Name where song.Sales > 300000", "sql": "select  distinct singer.Name from singer  where  song.Sales > 300000 "}, {"NatSQL": "select singer.Name where count ( song.* ) > 1 group by singer.Name", "sql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "}, {"NatSQL": "select singer.Name where count ( song.* ) > 1 group by singer.Name", "sql": "select singer.Name from singer  where  count ( song.* )  > 1  group by singer.Name "}, {"NatSQL": "select singer.Name , sum ( song.Sales ) group by singer.Name", "sql": "select singer.Name , sum ( song.Sales )  from singer  group by singer.Name "}, {"NatSQL": "select singer.Name , sum ( song.Sales ) group by singer.Name", "sql": "select singer.Name , sum ( song.Sales )  from singer  group by singer.Name "}, {"NatSQL": "select singer.Name where @.@ not in song.*", "sql": "select singer.Name from singer  where  @.@ not in song.* "}, {"NatSQL": "select singer.Name where @.@ not in song.*", "sql": "select singer.Name from singer  where  @.@ not in song.* "}, {"NatSQL": "select singer.Citizenship where singer.Birth_Year < 1945 and singer.Birth_Year > 1955", "sql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955 "}, {"NatSQL": "select singer.Citizenship where singer.Birth_Year < 1945 and singer.Birth_Year > 1955", "sql": "select singer.Citizenship from singer  where  singer.Birth_Year < 1945  and  singer.Birth_Year > 1955 "}, {"NatSQL": "select count ( other_available_features.* )", "sql": "select count ( other_available_features.* )  from other_available_features "}, {"NatSQL": "select ref_feature_types.feature_type_name where other_available_features.feature_name = \"AirCon\"", "sql": "select ref_feature_types.feature_type_name from other_available_features  where  other_available_features.feature_name = \"AirCon\" "}, {"NatSQL": "select ref_property_types.property_type_description where @.@ join properties.* group by properties.property_type_code", "sql": "select ref_property_types.property_type_description from ref_property_types  where  @.@ join properties.*  group by properties.property_type_code "}, {"NatSQL": "select properties.property_name where properties.property_type_code = \"House\" or properties.property_type_code = \"Apartment\" and properties.room_count > 1", "sql": "select properties.property_name from properties  where  properties.property_type_code = \"House\"  or  properties.property_type_code = \"Apartment\"  and  properties.room_count > 1 "}]